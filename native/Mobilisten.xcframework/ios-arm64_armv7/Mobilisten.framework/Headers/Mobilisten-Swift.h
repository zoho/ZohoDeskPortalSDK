#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
#ifndef MOBILISTEN_SWIFT_H
#define MOBILISTEN_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import UserNotifications;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Mobilisten",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, APNSMode, open) {
  APNSModeSandbox = 0,
  APNSModeProduction = 1,
};



/// TimeStyle
/// \code
/// case curveLess
/// case roundedCurve
/// case boxUpperCurve
/// case boxLowerCurve
///
/// \endcode
typedef SWIFT_ENUM(NSInteger, BubbleStyle, open) {
/// This type is used to display the chat bubble without curve
  BubbleStyleCurveLess = 0,
/// This type is used to display the chat bubble with rounded curve
  BubbleStyleRoundedCurve = 1,
/// This type is used to display the chat bubble with upper arrow
  BubbleStyleBoxUpperCurve = 2,
/// This type is used to display the chat bubble with lower arrow
  BubbleStyleBoxLowerCurve = 3,
};




@class NSNumber;
@class SIQVisitorChat;

/// ChatActivityHandler is a NSObject class which contains the event handler methods.
SWIFT_CLASS("_TtC10Mobilisten19ChatActivityHandler")
@interface ChatActivityHandler : NSObject
/// This event handler allows you to invoke a method when the visitor enters/exits the chat window.
/// \param isinternal - Boolean determines whether visitor internal or close the chat window 
///
- (void)handleWidgetActionWithIsOpen:(BOOL)isOpen;
/// This event handler allows you to invoke a method when the user attends the chat initiated by the visitor.
/// \param visitor - SIQVisitorChat object containing the data <em>Visit Id,Attender Email,Question</em>
///
- (void)handleVisitorAttendedWithVisitor:(SIQVisitorChat * _Nonnull)visitor;
/// This event handler allows you to invoke a method, when the chat initiated by the visitor is not answered by the user or missed.
/// \param visitor - SIQVisitorChat object containing the data <em>Visit Id,Question</em>
///
- (void)handleVisitorMissedWithVisitor:(SIQVisitorChat * _Nonnull)visitor;
/// This event handler allows you to invoke a method, when the agents are offline. This will be called once after the page is loaded.
- (void)handleAgentsOffline;
/// This event handler allows you to invoke a method, when the agents are online. This will be called once after the page is loaded.
- (void)handleAgentsOnline;
/// This event handler allows you to invoke a method, when a chat session is completed.
/// \param visitor - SIQVisitorChat object containing the data <em>Visit Id,Attender Email,Question</em>
///
- (void)handleChatCompleteWithVisitor:(SIQVisitorChat * _Nonnull)visitor;
/// This event handler allows you to invoke a method, when a chat session is completed.
/// \param visitor - SIQVisitorChat object containing the data <em>Visit Id,Attender Email,Question</em>
///
- (void)handleChatReopenWithVisitor:(SIQVisitorChat * _Nonnull)visitor;
/// This event handler allows you to invoke a method, on completion of a rating.
/// \param visitor - SIQVisitorChat object containing the data <em>Visit Id,Attender Email,Question,Rating</em>
///
- (void)handleRatingWithVisitor:(SIQVisitorChat * _Nonnull)visitor;
/// This event handler allows you to invoke a method, on completion of a feedback.
/// \param visitor - SIQVisitorChat object containing the data <em>Visit Id,Attender Email,Question,Feedback</em>
///
- (void)handleFeedbackWithVisitor:(SIQVisitorChat * _Nonnull)visitor;
/// This event handler allows you to invoke a method, when unreadmessage count changes.
/// \param count - Int value** 
///
- (void)updateUnreadMessagesWithCount:(NSInteger)count;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// ChatComponent
/// \code
/// case agent
/// case rating
/// case feedback
/// case agentPhotoOnChatIcon
///
/// \endcode
typedef SWIFT_ENUM(NSInteger, ChatComponent, open) {
/// This component used to show/hide conversation history  view
  ChatComponentConversationHistory = 0,
/// This component is used to enable/disable the pre-chat form
  ChatComponentPreChatForm = 1,
/// This component used to show/hide visitor’s name if set in the chat window
  ChatComponentVisitorName = 2,
/// This component used to show/hide attender profile photo in chat window
  ChatComponentAttenderImageInChat = 3,
/// This component used to show/hide attender photo on the launcher
  ChatComponentAttenderImageOnLauncher = 4,
/// This component is used to enable/disable the option to take screenshots from the more menu
  ChatComponentScreenshotOption = 5,
/// This component is used to enable/disable sending media attachments
  ChatComponentPhotoLibrary = 6,
/// This component is used to enable/disable using camera to capture media
  ChatComponentMediaCapture = 7,
/// This component used to enable/disable voice messages
  ChatComponentVoiceMessages = 8,
/// This component is used to enable/disable file sharing from documents
  ChatComponentFileSharing = 9,
/// This component is used to enable/disable in-app notifications
  ChatComponentInAppNotifications = 10,
/// This component is used to enable/disable sending email transcript
  ChatComponentEmailTranscript = 11,
/// This component used to show/hide rating window
  ChatComponentRating = 12,
/// This component used to show/hide feedback window
  ChatComponentFeedback = 13,
};

/// ChatStatus
/// \code
/// case open
/// case waiting
/// case closed
/// case missed
///
/// \endcode
typedef SWIFT_ENUM(NSInteger, ChatStatus, open) {
/// Combined list of chats whose status include: connected, waiting, proactive, triggered
  ChatStatusOpen = 0,
/// Chats which are tiggered by a bot or an intelligent trigger
  ChatStatusTriggered = 1,
/// Chats which proactively initiated by an operator.
  ChatStatusProactive = 2,
/// Chats which are connected to an operator or bot
  ChatStatusConnected = 3,
/// Chats which are awaiting response from an operator
  ChatStatusWaiting = 4,
/// Chats which have gone missed
  ChatStatusMissed = 5,
/// Chats which have been closed
  ChatStatusClosed = 6,
/// Chats which have been closed or gone missed
  ChatStatusEnded = 7,
/// All chats
  ChatStatusAll = 8,
};


@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS("_TtC10Mobilisten17FAQCategoryEntity")
@interface FAQCategoryEntity : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

@interface FAQCategoryEntity (SWIFT_EXTENSION(Mobilisten))
@property (nonatomic, strong) NSNumber * _Nullable count;
@property (nonatomic, copy) NSString * _Nullable crc_value;
@property (nonatomic, copy) NSString * _Nullable current_server_time;
@property (nonatomic, copy) NSString * _Nullable categoryid;
@property (nonatomic, copy) NSString * _Nullable categoryname;
@end


SWIFT_CLASS("_TtC10Mobilisten14LCAdminHandler")
@interface LCAdminHandler : NSObject
- (void)setChatHandler:(ChatActivityHandler * _Nonnull)handler SWIFT_UNAVAILABLE_MSG("Use ZohoSalesIQDelegate [ZohoSalesIQ.delegate] for tracking events.");
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol ZohoSalesIQChatDelegate;
enum Language : NSInteger;
@class NSError;
@class SIQDepartment;
enum SystemMessage : NSInteger;
@class UIImage;
@class UIColor;
@class UIFont;
enum TimeStyle : NSInteger;

SWIFT_CLASS("_TtC10Mobilisten15LCSharedHandler")
@interface LCSharedHandler : NSObject
@property (nonatomic, weak) id <ZohoSalesIQChatDelegate> _Nullable delegate;
/// This API helps you to set title for the SalesIQ chat UI header.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setTitle("Zylker Live Support")
///
/// \endcodeprecondition:
/// Title should not be nil
/// \param title - Chat window title 
///
- (void)setTitle:(NSString * _Nullable)title;
/// This API allows you to clear the messages in the chat window.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.clearMessages()
///
/// \endcode
- (void)clearMessages;
- (void)clearData;
- (void)setQuestion:(NSString * _Nullable)question;
/// This API is used to set a question and initiate a chat. This question will be sent immediately when the chat window is internaled i.e., the Chat will be initiated.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.startChat(question: "Hello, I need assistance.")
///
/// \endcodeprecondition:
/// Question should not be nil
/// \param question - String value determines question to initiate the chat 
///
- (void)startChatWithQuestion:(NSString * _Nonnull)question;
/// Use this  variable to check if a new chat can be started from the SalesIQ SDK.
/// This value changes based on the portal configuration
/// (Buissness hours, chat enabled, IP Blocked, Embed Offline)
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.isEnabled
///
///
/// \endcode<ul>
///   <li>
///   </li>
/// </ul>
@property (nonatomic, readonly) BOOL isEnabled;
/// This API allows you to set the email address of a particular user to route the chats received from the visitors. If the Email address is provided in the API, then the visitor chats received in the application will be routed only to that specific user.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setAgentEmail("patricia@zylker.com")
///
/// \endcodenote:
/// If the User email address is provided in this API, then all the chats received from the visitor will be routed only to the particular user. Other users will not receive any chat notification from the visitors. If the mapped user is offline/Busy/engaged, then the chats will be routed to the other available users.
/// \param email - Agent email id 
///
- (void)setAgentEmail:(NSString * _Nullable)email;
/// This API allows you to set a language for the Chat Widget.The language you would like to set in the chat widget will reflect, if you provide the name of the language in this API.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setLanguage(Language.english.languageCodeName())
///
///
/// \endcode\param language - Language name 
///
- (void)setLanguage:(enum Language)language;
/// This API allows you to set a language for the Chat Widget.The language you would like to set in the chat widget will reflect, if you provide the name of the language in this API.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setLanguageWithCode("en")
///
///
/// \endcode\param languageCode - Language code 
///
- (void)setLanguageWithCode:(NSString * _Nonnull)languageCode;
/// This API allows you to get a list of all connected chats.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.getList(filter: .open)
///
///
/// \endcode\param language - Language name 
///
- (void)getListWithFilter:(enum ChatStatus)filter completion:(void (^ _Nullable)(NSError * _Nullable, NSArray<SIQVisitorChat *> * _Nullable))completion;
- (void)getDepartmentsWithCompletion:(void (^ _Nullable)(NSError * _Nullable, NSArray<SIQDepartment *> * _Nullable))completion;
/// Use this  variable to check if a user can have multiple parallely open chats.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.isParallelChatsEnabled
///
///
/// \endcode<ul>
///   <li>
///   </li>
/// </ul>
@property (nonatomic, readonly) BOOL multipleOpenRestricted;
/// This API allows you to display only the required departments in the pre-chat form. All other configured departments will be hidden regardless of their status.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setDepartment("ZylkerSales")
///
/// \endcodeprecondition:
/// Department name should not be nil
/// \param department - Department name 
///
- (void)setDepartment:(NSString * _Nullable)department;
- (void)setDepartments:(NSArray<NSString *> * _Nullable)departments;
/// This API allows you to handle the visibility of User’s photo, Rating, Feedback i.e., you can enable or disable the users photo, rating and feedback in the chat window.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setVisibility(.agent, visible: true)
///
/// \endcodenote:
/// By default, the Rating and feeback will be enabled.
/// \param component - Enum determines type of ChatComponent (agent,rating,feedback,agentPhotoOnChatIcon) 
///
/// \param visible - Boolean value determine to show or hide the component 
///
- (void)setVisibility:(enum ChatComponent)component visible:(BOOL)visible;
/// This API is used to customize the system messages displayed in the chat widget.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setMessage(.chatCompleted, message: "Thank You for contacting us! Please leave us your valuable feedback.")
///
/// \endcode\param type - Enum determines type of SystemMessage (chatCompleted,ratingCompleted,feedbackCompleted,ratingAndFeedbackCompleted) 
///
/// \param message - String value determine message to be displayed for SystemMessage 
///
- (void)setMessage:(enum SystemMessage)type message:(NSString * _Nullable)message;
- (void)setCustomChatIconWithImage:(UIImage * _Nullable)image isTemplateImage:(BOOL)isTemplateImage;
/// This API allows you to display the visitor’s photo in the chat window.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setVisitorImage(image: "IMAGENAME")
///
/// \endcodeprecondition:
/// Image should not be nil
/// \param image - Vistor image 
///
- (void)setVisitorImage:(UIImage * _Nullable)image SWIFT_AVAILABILITY(ios,unavailable,message="This method has been depricated.");
/// This API allows you to customize your theme color of the chat window.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setThemeColor(UIColor.greenColor())
///
/// \endcode\param color - UIColor 
///
- (void)setThemeColor:(UIColor * _Nullable)color SWIFT_DEPRECATED_MSG("Customize the themeColor using `customTheme.themeColor` property in object from ZohoSalesIQ.Theme.baseTheme and set the custom theme using the ZohoSalesIQ.Theme.setTheme method");
/// This API allows you to customize the navigationbar color.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setBarColor(UIColor.blackColor())
///
/// \endcode\param color - UIColor 
///
- (void)setBarColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED_MSG("Customize in theme object using `customTheme.Navigation.backgroundColor` from ZohoSalesIQ.Theme.baseTheme and set the theme using the ZohoSalesIQ.Theme.setTheme method.");
/// This API allows you to customize the navigationbar contents color like barbuttons  and searchbar contents.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setBarTintColor(UIColor.whiteColor())
///
/// \endcode\param color - UIColor 
///
- (void)setBarTintColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED_MSG("Customize in theme object using `customTheme.Navigation.tintColor` from ZohoSalesIQ.Theme.baseTheme and set the theme using the ZohoSalesIQ.Theme.setTheme method.");
/// This API allows you to customize the navigationbar title text color.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setBarTitleColor(UIColor.black)
///
/// \endcode\param color - UIColor 
///
- (void)setBarTitleColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED_MSG("Customize in theme object using `customTheme.Navigation.titleColor` from ZohoSalesIQ.Theme.baseTheme and set the theme using the ZohoSalesIQ.Theme.setTheme method.");
/// This API allows you to customize the UISearchController tint color.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setSearchTintColor(UIColor.black)
///
/// \endcode\param color - UIColor 
///
- (void)setSearchTintColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED;
- (void)setBarTitleFont:(UIFont * _Nonnull)font SWIFT_AVAILABILITY(ios,unavailable,message="This API is under construction.");
/// This API allows you to set the backgroundColor of the chat window.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setMessageWindowBackgroundColor(UIColor.darkGray)
///
/// \endcode\param color - UIColor 
///
- (void)setMessageWindowBackgroundColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED_MSG("Customize in theme object using `customTheme.Chat.backgroundColor` from ZohoSalesIQ.Theme.baseTheme and set the customized theme using the ZohoSalesIQ.Theme.setTheme method.");
/// This API allows you to set the incomming message backgroundColor.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setIncommingMessageBackgroundColor(UIColor.lightGray)
///
/// \endcode\param color - UIColor 
///
- (void)setIncommingMessageBackgroundColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED_MSG("Customize in theme object using `customTheme.Chat.Message.Common.incomingBackgroundColor` from ZohoSalesIQ.Theme.baseTheme and set the customized theme using the ZohoSalesIQ.Theme.setTheme method.");
/// This API allows you to set the outgoing message backgroundColor.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setOutgoingMessageBackgroundColor(UIColor.blue)
///
/// \endcode\param color - UIColor 
///
- (void)setOutgoingMessageBackgroundColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED_MSG("Customize in theme object using `customTheme.Chat.Message.Common.outgoingBackgroundColor` from ZohoSalesIQ.Theme.baseTheme and set the customized theme using the ZohoSalesIQ.Theme.setTheme method.");
/// This API allows you to set the time display style of the chat window.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setTimeDisplayStyle(.inside)
///
/// \endcode\param style - Enum determines type of TimeStyle(inside,outsideSlide) 
///
- (void)setTimeDisplayStyle:(enum TimeStyle)style SWIFT_AVAILABILITY(ios,unavailable,message="This method has been depricated.");
- (void)setFAQDepartmentVisibility:(BOOL)visible;
- (void)setFAQCategoryVisibility:(BOOL)visible;
/// This API allows you to get the unreadmessage count from current ongoing chat.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.getUnreadMessageCount()
///
/// \endcode<ul>
///   <li>
///     Returns unreadmessages count
///   </li>
/// </ul>
- (NSInteger)getUnreadMessageCount SWIFT_WARN_UNUSED_RESULT;
/// This API allows you to set end the active chat session.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.endSession(referenceID: String)
///
/// \endcode
- (void)endSessionWithReferenceID:(NSString * _Nonnull)referenceID;
/// This API allows you to showOfflineMessage.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.showOfflineMessage(true)
///
/// \endcode
- (void)showOfflineMessage:(BOOL)show;
/// This API allows you to set offline message.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setOfflineMessage("Hi there! Looks like none of our operators are available right now to assit you. Do drop us a message and we will get back to you ASAP.")
///
/// \endcode
- (void)setOfflineMessage:(NSString * _Nullable)message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// This API allows you to fetch operator image give a visitor chat object
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.fetchAttenderImage(chat: SIQVisitorChat, fetchDefaultImage: Bool)
///
/// \endcode
- (void)fetchAttenderImageWithChat:(SIQVisitorChat * _Nonnull)chat fetchDefaultImage:(BOOL)fetchDefaultImage completion:(void (^ _Nullable)(NSError * _Nullable, UIImage * _Nullable))completion;
/// This API allows you to show the Chat Window i.e., to internal the chat window automatically.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.show()
/// ZohoSalesIQ.Chat.show(referenceID: String)
/// ZohoSalesIQ.Chat.show(new: Bool)
///
/// \endcode
- (void)showWithReferenceID:(NSString * _Nullable)referenceID new:(BOOL)new_;
@end




typedef SWIFT_ENUM(NSInteger, Language, open) {
  LanguageEnglish = 0,
  LanguageFrench = 1,
  LanguageGerman = 2,
  LanguageSpanish = 3,
  LanguageDutch = 4,
  LanguageNorwegian = 5,
  LanguageTurkish = 6,
  LanguageRussian = 7,
  LanguagePortuguese = 8,
  LanguageItalian = 9,
  LanguageKorean = 10,
  LanguageJapanese = 11,
  LanguageDanish = 12,
  LanguagePolish = 13,
  LanguageArabic = 14,
  LanguageHungarian = 15,
  LanguageChinese = 16,
  LanguageHebrew = 17,
  LanguageIrish = 18,
  LanguageRomanian = 19,
  LanguageThai = 20,
  LanguageSwedish = 21,
  LanguageGreek = 22,
  LanguageCzech = 23,
  LanguageSlovak = 24,
  LanguageSlovenian = 25,
  LanguageCroatian = 26,
  LanguageInstance = 27,
};


SWIFT_CLASS("_TtC10Mobilisten12LanguageCode")
@interface LanguageCode : NSObject
+ (NSString * _Nonnull)name:(enum Language)language SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UITraitCollection;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC10Mobilisten17SIQViewController")
@interface SIQViewController : UIViewController
- (void)viewDidLoad;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIGestureRecognizer;
@protocol UIViewControllerAnimatedTransitioning;
@class UITextView;

SWIFT_CLASS("_TtC10Mobilisten22LiveChatViewController")
@interface LiveChatViewController : SIQViewController <UIGestureRecognizerDelegate, UIViewControllerTransitioningDelegate>
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, copy) NSString * _Nullable title;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
@property (nonatomic, readonly) BOOL shouldAutorotate;
- (void)didReceiveMemoryWarning;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (void)didMoveToParentViewController:(UIViewController * _Nullable)parent;
- (void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIDocumentPickerViewController;
@class NSURL;

@interface LiveChatViewController (SWIFT_EXTENSION(Mobilisten)) <UIDocumentPickerDelegate>
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentsAtURLs:(NSArray<NSURL *> * _Nonnull)urls;
@end

@class UIPopoverPresentationController;

@interface LiveChatViewController (SWIFT_EXTENSION(Mobilisten)) <UIPopoverPresentationControllerDelegate>
- (BOOL)popoverPresentationControllerShouldDismissPopover:(UIPopoverPresentationController * _Nonnull)popoverPresentationController SWIFT_WARN_UNUSED_RESULT;
@end






@class UITextField;

@interface LiveChatViewController (SWIFT_EXTENSION(Mobilisten)) <UITextFieldDelegate>
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end




@interface LiveChatViewController (SWIFT_EXTENSION(Mobilisten)) <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidBeginEditing:(UITextView * _Nonnull)textView;
- (void)textViewDidChangeSelection:(UITextView * _Nonnull)textView;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end
















SWIFT_CLASS("_TtC10Mobilisten23NotificationLinkHandler")
@interface NotificationLinkHandler : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten16SIQActionHandler")
@interface SIQActionHandler : NSObject
- (void)successWithMessage:(NSString * _Nullable)message;
- (void)faliureWithMessage:(NSString * _Nullable)message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SIQChatAction;

SWIFT_CLASS("_TtC10Mobilisten17SIQActionRegistry")
@interface SIQActionRegistry : NSObject
- (void)registerWithAction:(SIQChatAction * _Nonnull)action;
- (void)unregisterWithNameWithName:(NSString * _Nonnull)name;
- (void)unregisterAll;
- (void)setTimeout:(double)timeout;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten19SIQAudioPlayerTheme")
@interface SIQAudioPlayerTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified thumbColor;
@property (nonatomic, strong) UIColor * _Null_unspecified playButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingTrackColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingTrackColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingButtonIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingButtonIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingDurationTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingDurationTextColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SIQChatActionArguments;

SWIFT_CLASS("_TtC10Mobilisten13SIQChatAction")
@interface SIQChatAction : NSObject
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name action:(void (^ _Nonnull)(SIQChatActionArguments * _Nonnull, SIQActionHandler * _Nonnull))action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10Mobilisten22SIQChatActionArguments")
@interface SIQChatActionArguments : NSObject
@property (nonatomic, copy) NSString * _Nonnull type;
@property (nonatomic, copy) NSString * _Nonnull label;
@property (nonatomic, copy) NSString * _Nonnull identifier;
@property (nonatomic, copy) NSString * _Nullable elementID;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10Mobilisten16SIQChatFormTheme")
@interface SIQChatFormTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTintColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldPlaceholderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTitleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldRequiredIndicatorColor;
@property (nonatomic, strong) UIColor * _Null_unspecified errorColor;
@property (nonatomic, strong) UIColor * _Null_unspecified submitButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified submitButtonTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified campaignOptInTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified checkboxCheckedColor;
@property (nonatomic, strong) UIColor * _Null_unspecified checkboxUncheckedColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten17SIQChatInputTheme")
@interface SIQChatInputTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified audioRecordHintBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified audioRecordHintTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldBorderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTintColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldPlaceholderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified attachmentButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordSoundPulseBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified sendButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified buttonDisabledBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordTimerBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordTimerTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordTimerIndicatorColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordSlideTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordSlideIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordCancelTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified moreIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified sendIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordIconColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SIQLauncherUnreadBadgeTheme;

SWIFT_CLASS("_TtC10Mobilisten24SIQChatScrollButtonTheme")
@interface SIQChatScrollButtonTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified iconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) SIQLauncherUnreadBadgeTheme * _Nonnull UnreadBadge;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SIQMessageTheme;
@class SIQHandOffBannerTheme;
@class SIQQueueBannerTheme;
@class SIQEmailTranscriptTheme;

SWIFT_CLASS("_TtC10Mobilisten18SIQChatWindowTheme")
@interface SIQChatWindowTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIImage * _Null_unspecified backgroundImage;
@property (nonatomic, strong) SIQMessageTheme * _Nonnull Message;
@property (nonatomic, strong) SIQHandOffBannerTheme * _Nonnull HandOffBanner;
@property (nonatomic, strong) SIQQueueBannerTheme * _Nonnull QueueBanner;
@property (nonatomic, strong) SIQChatInputTheme * _Nonnull Input;
@property (nonatomic, strong) SIQChatScrollButtonTheme * _Nonnull ScrollButton;
@property (nonatomic, strong) SIQEmailTranscriptTheme * _Nonnull EmailTranscript;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten28SIQConversationListItemTheme")
@interface SIQConversationListItemTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified timerTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified timerIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified titleTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified subtitleTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified timeTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified openBadgeBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified openBadgeBorderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified openBadgeTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified separatorColor;
@property (nonatomic, strong) SIQLauncherUnreadBadgeTheme * _Nonnull UnreadBadge;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten20SIQConversationTheme")
@interface SIQConversationTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) SIQConversationListItemTheme * _Nonnull ListItem;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten21SIQConversationsClass")
@interface SIQConversationsClass : NSObject
- (void)setVisibility:(BOOL)visible;
- (void)setTitle:(NSString * _Nonnull)title;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten13SIQDepartment")
@interface SIQDepartment : NSObject
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id name:(NSString * _Nonnull)name available:(BOOL)available OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic) BOOL available;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10Mobilisten23SIQEmailTranscriptTheme")
@interface SIQEmailTranscriptTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTintColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten17SIQEmptyViewTheme")
@interface SIQEmptyViewTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified chatButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified chatButtonTitleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSDate;

SWIFT_CLASS("_TtC10Mobilisten13SIQFAQArticle")
@interface SIQFAQArticle : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic) BOOL isRated;
@property (nonatomic) NSInteger viewCount;
@property (nonatomic) NSInteger likeCount;
@property (nonatomic) NSInteger dislikeCount;
@property (nonatomic, copy) NSString * _Nonnull categoryName;
@property (nonatomic, copy) NSString * _Nonnull categoryID;
@property (nonatomic, copy) NSDate * _Nullable createdTime;
@property (nonatomic, copy) NSDate * _Nullable lastModifiedTime;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10Mobilisten14SIQFAQCategory")
@interface SIQFAQCategory : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) NSInteger articleCount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol ZohoSalesIQFAQDelegate;

SWIFT_CLASS("_TtC10Mobilisten11SIQFAQClass")
@interface SIQFAQClass : NSObject
@property (nonatomic, weak) id <ZohoSalesIQFAQDelegate> _Nullable delegate;
/// This get-only property allows you to check if Articles are enabled in portal settings.
/// <h2>Usage Example</h2>
/// \code
/// let faqEnabled = ZohoSalesIQ.FAQ.isEnabled
///
/// \endcode
@property (nonatomic, readonly) BOOL isEnabled;
/// This API allows you to set the number of recent search entries
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.FAQ.setRecentShowLimit(5)
///
/// \endcode\param limit - Int 
///
- (void)setRecentShowLimit:(NSInteger)limit;
/// This API allows you to get list of all categories from your knowledge base.
/// The API provides an asynchronous callback with error and an array of SIQFAQCategory objects.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.FAQ.getCategories()
///
/// \endcode
- (void)getCategories:(void (^ _Nullable)(NSError * _Nullable, NSArray<SIQFAQCategory *> * _Nullable))completion;
/// This API allows you to toggle visibility of FAQ in Mobilisten UI.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.FAQ.setVisibility(true)
///
/// \endcode
- (void)setVisibility:(BOOL)visible;
/// This API allows you to get list of all categories from your knowledge base.
/// The API provides an asynchronous callback with error and an array of SIQFAQArticle objects.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.FAQ.getArticles(categoryID: "1002")
///
/// \endcode\param categoryID - String 
///
- (void)getArticlesWithCategoryID:(NSString * _Nullable)categoryID :(void (^ _Nullable)(NSError * _Nullable, NSArray<SIQFAQArticle *> * _Nullable))completion;
/// This API allows you to open an article
/// This API is designed to work with the getArticles list API and
/// articleID can be obtained from the results of the getArticles API.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.FAQ.getArticles(articleID: "1002")
///
/// \endcode\param articleID - String 
///
- (void)openArticleWithArticleID:(NSString * _Nonnull)articleID :(void (^ _Nullable)(NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten19SIQFAQListItemTheme")
@interface SIQFAQListItemTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified titleTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified subtitleTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified subtitlePartitionColor;
@property (nonatomic, strong) UIColor * _Null_unspecified likePendingColor;
@property (nonatomic, strong) UIColor * _Null_unspecified likedColor;
@property (nonatomic, strong) UIColor * _Null_unspecified separatorColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten11SIQFAQTheme")
@interface SIQFAQTheme : NSObject
@property (nonatomic, strong) SIQFAQListItemTheme * _Nonnull ListItem;
@property (nonatomic, strong) UIColor * _Null_unspecified headerTextColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten16SIQFeedbackTheme")
@interface SIQFeedbackTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified primaryTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified secondaryTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified skipButtonTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified submitButtonTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified submitButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified feedbackTextFieldTintColor;
@property (nonatomic, strong) UIColor * _Null_unspecified feedbackPlaceholderTextColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten21SIQHandOffBannerTheme")
@interface SIQHandOffBannerTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified buttonTitleColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten25SIQInAppNotificationTheme")
@interface SIQInAppNotificationTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified titleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified subtitleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified imageBackgroundColor;
@property (nonatomic, strong) NSNumber * _Null_unspecified cornerRadius;
@property (nonatomic, strong) NSNumber * _Null_unspecified imageCornerRadius;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten19SIQInfoMessageTheme")
@interface SIQInfoMessageTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified lineColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten17SIQInputCardTheme")
@interface SIQInputCardTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified titleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldPlaceholderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified sendButtonBackgroudColor;
@property (nonatomic, strong) UIColor * _Null_unspecified sendButtonIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified separatorColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten16SIQLauncherTheme")
@interface SIQLauncherTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified iconColor;
@property (nonatomic, strong) SIQLauncherUnreadBadgeTheme * _Nonnull UnreadBadge;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten27SIQLauncherUnreadBadgeTheme")
@interface SIQLauncherUnreadBadgeTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified borderColor;
@property (nonatomic, strong) NSNumber * _Null_unspecified borderWidth;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten21SIQMessageCommonTheme")
@interface SIQMessageCommonTheme : NSObject
@property (nonatomic, strong) NSNumber * _Null_unspecified botTypingIndicatorStyle;
@property (nonatomic, strong) UIColor * _Null_unspecified messageSenderNameColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingBorderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingTimeTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingTimeIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingBorderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingTimeTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingTimeIconColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SIQSuggestionTheme;
@class SIQSkipActionButtonTheme;
@class SIQSelectionComponentTheme;
@class SIQSliderCardTheme;

SWIFT_CLASS("_TtC10Mobilisten15SIQMessageTheme")
@interface SIQMessageTheme : NSObject
@property (nonatomic, strong) SIQMessageCommonTheme * _Nonnull Common;
@property (nonatomic, strong) SIQSuggestionTheme * _Nonnull Suggestion;
@property (nonatomic, strong) SIQSkipActionButtonTheme * _Nonnull SkipActionButton;
@property (nonatomic, strong) SIQAudioPlayerTheme * _Nonnull AudioPlayer;
@property (nonatomic, strong) SIQSelectionComponentTheme * _Nonnull Selection;
@property (nonatomic, strong) SIQInputCardTheme * _Nonnull InputCard;
@property (nonatomic, strong) SIQSliderCardTheme * _Nonnull Slider;
@property (nonatomic, strong) SIQInfoMessageTheme * _Nonnull InfoMessage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten18SIQNavigationTheme")
@interface SIQNavigationTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified titleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten24SIQNoNetworkBannnerTheme")
@interface SIQNoNetworkBannnerTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified loaderColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten21SIQOfflineBannerTheme")
@interface SIQOfflineBannerTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten19SIQQueueBannerTheme")
@interface SIQQueueBannerTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified titleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified subtitleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified subtitleTimeColor;
@property (nonatomic, strong) UIColor * _Null_unspecified positionTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified positionSubtitleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified positionContainerBackgroundColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten26SIQSelectionComponentTheme")
@interface SIQSelectionComponentTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified accessoryColor;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified selectionBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified buttonTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified buttonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified linkTextColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten24SIQSkipActionButtonTheme")
@interface SIQSkipActionButtonTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified borderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) NSNumber * _Null_unspecified cornerRadius;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten18SIQSliderCardTheme")
@interface SIQSliderCardTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified thumbBorderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified selectedTrackColor;
@property (nonatomic, strong) UIColor * _Null_unspecified selectedValueTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified unSelectedTrackColor;
@property (nonatomic, strong) UIColor * _Null_unspecified thumbBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified minRangeTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified maxRangeTextColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten18SIQSuggestionTheme")
@interface SIQSuggestionTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified borderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) NSNumber * _Null_unspecified cornerRadius;
@property (nonatomic, strong) NSNumber * _Null_unspecified displayStyle;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten14SIQTabBarTheme")
@interface SIQTabBarTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified activeTabColor;
@property (nonatomic, strong) UIColor * _Null_unspecified inactiveTabColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSAttributedString;
@class NSTextContainer;

IB_DESIGNABLE
SWIFT_CLASS("_TtC10Mobilisten11SIQTextView")
@interface SIQTextView : UITextView
@property (nonatomic, copy) IBInspectable NSString * _Nonnull placeholder;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull placeholderColor;
@property (nonatomic, strong) UIFont * _Null_unspecified font;
@property (nonatomic) NSTextAlignment textAlignment;
@property (nonatomic, copy) NSString * _Null_unspecified text;
@property (nonatomic, strong) NSAttributedString * _Null_unspecified attributedText;
@property (nonatomic) UIEdgeInsets textContainerInset;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC10Mobilisten8SIQTheme")
@interface SIQTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified themeColor;
@property (nonatomic, strong) SIQLauncherTheme * _Nonnull Launcher;
@property (nonatomic, strong) SIQTabBarTheme * _Nonnull TabBar;
@property (nonatomic, strong) SIQNavigationTheme * _Nonnull Navigation;
@property (nonatomic, strong) SIQEmptyViewTheme * _Nonnull EmptyView;
@property (nonatomic, strong) SIQOfflineBannerTheme * _Nonnull OfflineBanner;
@property (nonatomic, strong) SIQNoNetworkBannnerTheme * _Nonnull NetworkWaitingBanner;
@property (nonatomic, strong) SIQConversationTheme * _Nonnull Conversation;
@property (nonatomic, strong) SIQFAQTheme * _Nonnull FAQ;
@property (nonatomic, strong) SIQChatWindowTheme * _Nonnull Chat;
@property (nonatomic, strong) SIQChatFormTheme * _Nonnull Form;
@property (nonatomic, strong) SIQFeedbackTheme * _Nonnull Feedback;
@property (nonatomic, strong) SIQInAppNotificationTheme * _Nonnull InAppNotification;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC10Mobilisten10SIQVisitor")
@interface SIQVisitor : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSString * _Nullable phone;
@property (nonatomic, copy) NSString * _Nullable browser;
@property (nonatomic, copy) NSString * _Nullable os;
@property (nonatomic, copy) NSString * _Nullable ip;
@property (nonatomic, copy) NSString * _Nullable countryCode;
@property (nonatomic, copy) NSString * _Nullable searchEngine;
@property (nonatomic, copy) NSString * _Nullable searchQuery;
@property (nonatomic, copy) NSString * _Nullable region;
@property (nonatomic, copy) NSString * _Nullable state;
@property (nonatomic, copy) NSString * _Nullable city;
@property (nonatomic, strong) NSNumber * _Nullable numberOfChats;
@property (nonatomic, strong) NSNumber * _Nullable numberOfVisits;
@property (nonatomic, strong) NSNumber * _Nullable noOfDaysVisited;
@property (nonatomic, strong) NSNumber * _Nullable totalTimeSpent;
@property (nonatomic, copy) NSDate * _Nullable firstVisitTime;
@property (nonatomic, copy) NSDate * _Nullable lastVisitTime;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten14SIQVisitorChat")
@interface SIQVisitorChat : NSObject
@property (nonatomic, copy) NSString * _Nullable attenderEmail;
@property (nonatomic, copy) NSString * _Nullable attenderID;
@property (nonatomic, copy) NSString * _Nullable attenderName;
@property (nonatomic, copy) NSString * _Nullable departmentName;
@property (nonatomic, copy) NSString * _Nullable feedback;
@property (nonatomic) BOOL isBotAttender;
@property (nonatomic, copy) NSString * _Nullable lastMessage;
@property (nonatomic, copy) NSString * _Nullable lastMessageSender;
@property (nonatomic, copy) NSString * _Nullable question;
@property (nonatomic, copy) NSString * _Nullable rating;
@property (nonatomic, copy) NSString * _Nullable referenceID;
@property (nonatomic) enum ChatStatus status;
@property (nonatomic, copy) NSDate * _Nullable lastMessageTime;
@property (nonatomic) NSInteger unreadCount;
@property (nonatomic) NSInteger queuePosition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10Mobilisten18SIQVisitorLocation")
@interface SIQVisitorLocation : NSObject
@property (nonatomic, copy) NSString * _Nullable countryCode;
@property (nonatomic, strong) NSNumber * _Nullable latitude;
@property (nonatomic, strong) NSNumber * _Nullable longitude;
@property (nonatomic, copy) NSString * _Nullable city;
@property (nonatomic, copy) NSString * _Nullable zipCode;
@property (nonatomic, copy) NSString * _Nullable state;
@property (nonatomic, copy) NSString * _Nullable country;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten19SheetViewController")
@interface SheetViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_MSG("Use the init(controller:, sizes:) initializer");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)dismissViewControllerAnimated:(BOOL)flag completion:(void (^ _Nullable)(void))completion;
@end

@class UITouch;

@interface SheetViewController (SWIFT_EXTENSION(Mobilisten)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, SuggestionStyle, open) {
/// Suggestions with a grid style
  SuggestionStyleVertical = 0,
/// Suggestions with horizontal scrolling
  SuggestionStyleHorizontal = 1,
};

typedef SWIFT_ENUM(NSInteger, SystemMessage, open) {
/// This system type is used to set the message when chat is completed
  SystemMessageChatCompleted = 0,
/// This system type is used to set the message when chat is missed
  SystemMessageChatMissed = 1,
/// This system type is used to set the message when rating is completed
  SystemMessageRatingCompleted = 2,
/// This system type is used to set the message when feedback is completed
  SystemMessageFeedbackCompleted = 3,
/// This system type is used to set the message when rating and feedback is completed
  SystemMessageRatingAndFeedbackCompleted = 4,
/// This system type is used to set the enter your question input placeholder before starting a chat
  SystemMessageInputQuestionPlaceholder = 5,
/// This system type is used to set the enter your message input placeholder in chat
  SystemMessageInputMessagePlaceholder = 6,
/// This system type is used to set the typing message if the typing style is set to 1
  SystemMessageTypingIndicatorMessage = 7,
/// This system type is used to set the message shown in the no network banner
  SystemMessageNetworkWaitingMessage = 8,
/// This system type is used to set the message shown in the chat window and conversations list when a chat is in waiting state
  SystemMessageChatWaiting = 9,
};


SWIFT_CLASS("_TtC10Mobilisten11ThemeConfig")
@interface ThemeConfig : NSObject
@property (nonatomic, readonly, strong) SIQTheme * _Nonnull baseTheme;
@property (nonatomic, readonly, strong) SIQTheme * _Nonnull currentCustomTheme;
- (void)forceUserInterfaceStyleWithStyle:(UIUserInterfaceStyle)style SWIFT_AVAILABILITY(ios,introduced=13.0);
- (void)setThemeWithTheme:(SIQTheme * _Nonnull)theme;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// TimeStyle
/// \code
/// case inside
/// case outsideSlide
///
/// \endcode
typedef SWIFT_ENUM(NSInteger, TimeStyle, open) {
/// This type is used to display the message time inside the chat bubble
  TimeStyleInside = 0,
/// This type is used to display the message time on user sliding the chat message
  TimeStyleOutsideSlide = 1,
};


SWIFT_CLASS("_TtC10Mobilisten13TrackingClass")
@interface TrackingClass : NSObject
/// This API is used to set title in each page for tracking the foot-path of the visitor while navigating from one page to the other.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Tracking.setPageTitle(title: "CURRENT PAGE TITLE")
///
/// \endcodeprecondition:
/// Page tile should not be nil
/// \param title - String value determines current page title 
///
- (void)setPageTitle:(NSString * _Nonnull)title;
/// This API allows you to track the custom actions performed by the visitors in the mobile application.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Tracking.setCustomAction(name: "BUTTON TAPPED")
///
/// \endcodeprecondition:
/// Action name should not be nil
/// \param actionname - String value determines custom action name 
///
- (void)setCustomAction:(NSString * _Nullable)actionname;
- (void)setCustomAction:(NSString * _Nullable)actionname action:(id _Nullable)action;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





















































SWIFT_CLASS("_TtC10Mobilisten12VisitorClass")
@interface VisitorClass : NSObject
/// This API is used to fill the visitor’s name in the chat widget text box.Even if the visitor name field is hidden from the chat widget, the API can still set the visitor name and display it to the agent.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.setName(name: "NAME")
///
/// \endcodeprecondition:
/// Visitor name should not be nil
/// \param name - String value determines visitor name 
///
- (void)setName:(NSString * _Nullable)name;
/// This API is used to set the Visitor’s location in the Visitor Object.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.setLocation(location: SIQVisitorLocation)
///
/// \endcode\param location - instance of SIQVisitorLocation class 
///
- (void)setLocation:(SIQVisitorLocation * _Nullable)location;
/// This API is used to fill the visitor email address in the chat widget text box.Even if the visitor email field is hidden from the chat widget, the API can still set the visitor email address and display it to the User.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.setEmail(email: "EMAIL")
///
/// \endcodeprecondition:
/// Email should not be nil
/// \param email - String value determines visitor email 
///
- (void)setEmail:(NSString * _Nullable)email;
/// This API is used to fill the visitor contact number in the chat widget text box.Even if the visitor contact number field is hidden from the chat widget, the API can still set the visitor contact number and display it to the user.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.setContactNumber(contactnumber: "PHONE NUMBER")
///
/// \endcodeprecondition:
/// Phone number should not be nil
/// \param number - String value determines visitor phone number 
///
- (void)setContactNumber:(NSString * _Nullable)number;
/// This API allows you to add the additional information about the visitor and displays it to the User in the visitor information section. These information are not visible to the visitors.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.addInfo("Gender", value: “Male”)
///
/// \endcodeprecondition:
/// key and value should not be nil
/// \param key - String value determines key for visitor info 
///
/// \param value - String value determines value for visitor info 
///
- (void)addInfo:(NSString * _Nullable)key value:(NSString * _Nullable)value;
/// This API is used to pre-fill a question in the chat widget.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.setQuestion("Hello, I need assistance.")
///
/// \endcodeprecondition:
/// question should not be nil
/// \param question - String value determines question to pre fill in the input field 
///
- (void)setQuestion:(NSString * _Nullable)question;
/// This API is used to trigger a custom action with a defined name
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.setQuestion("Hello, I need assistance.")
///
/// \endcodeprecondition:
/// question should not be nil
/// \param question - String value determines question to pre fill in the input field 
///
- (void)performCustomAction:(NSString * _Nonnull)name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten13VisitorObject")
@interface VisitorObject : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten24VisitorTrackingInterface")
@interface VisitorTrackingInterface : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol ZohoSalesIQDelegate;

SWIFT_CLASS("_TtC10Mobilisten11ZohoSalesIQ")
@interface ZohoSalesIQ : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) LCSharedHandler * _Nonnull Chat;)
+ (LCSharedHandler * _Nonnull)Chat SWIFT_WARN_UNUSED_RESULT;
+ (void)setChat:(LCSharedHandler * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) LCAdminHandler * _Nonnull Admin;)
+ (LCAdminHandler * _Nonnull)Admin SWIFT_WARN_UNUSED_RESULT;
+ (void)setAdmin:(LCAdminHandler * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) VisitorClass * _Nonnull Visitor;)
+ (VisitorClass * _Nonnull)Visitor SWIFT_WARN_UNUSED_RESULT;
+ (void)setVisitor:(VisitorClass * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) TrackingClass * _Nonnull Tracking;)
+ (TrackingClass * _Nonnull)Tracking SWIFT_WARN_UNUSED_RESULT;
+ (void)setTracking:(TrackingClass * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) ThemeConfig * _Nonnull Theme;)
+ (ThemeConfig * _Nonnull)Theme SWIFT_WARN_UNUSED_RESULT;
+ (void)setTheme:(ThemeConfig * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SIQActionRegistry * _Nonnull ChatActions;)
+ (SIQActionRegistry * _Nonnull)ChatActions SWIFT_WARN_UNUSED_RESULT;
+ (void)setChatActions:(SIQActionRegistry * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SIQFAQClass * _Nonnull FAQ;)
+ (SIQFAQClass * _Nonnull)FAQ SWIFT_WARN_UNUSED_RESULT;
+ (void)setFAQ:(SIQFAQClass * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SIQConversationsClass * _Nonnull Conversation;)
+ (SIQConversationsClass * _Nonnull)Conversation SWIFT_WARN_UNUSED_RESULT;
+ (void)setConversation:(SIQConversationsClass * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable apiDefinedPageTitle;)
+ (NSString * _Nullable)apiDefinedPageTitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setApiDefinedPageTitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, weak) id <ZohoSalesIQDelegate> _Nullable delegate;)
+ (id <ZohoSalesIQDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setDelegate:(id <ZohoSalesIQDelegate> _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable deviceToken;)
+ (NSString * _Nullable)deviceToken SWIFT_WARN_UNUSED_RESULT;
+ (void)setDeviceToken:(NSString * _Nullable)value;
/// This API allows you to set unique id for the visitor after login.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.registerVisitor("abc@mail.com")
///
/// \endcode
+ (void)registerVisitor:(NSString * _Nullable)id completion:(void (^ _Nullable)(BOOL))completion;
/// This API allows you to unregister visitor and clears all data after logout.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.unregisterVisitor()
///
/// \endcode
+ (void)unregisterVisitorWithCompletion:(void (^ _Nullable)(BOOL))completion;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull running_platform;)
+ (NSString * _Nonnull)running_platform SWIFT_WARN_UNUSED_RESULT;
+ (void)setRunning_platform:(NSString * _Nonnull)value;
+ (void)setPlatformWithPlatform:(NSString * _Nullable)platform;
+ (void)initWithAppKey:(NSString * _Nonnull)appKey accessKey:(NSString * _Nonnull)accessKey completion:(void (^ _Nullable)(BOOL))completion SWIFT_METHOD_FAMILY(none);
/// This API allows you to show/hide the chat icon.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.showLiveChat(_ show:true)
///
/// \endcode\param show - Boolean value determines to show/hide the chat icon 
///
+ (void)showLiveChat:(BOOL)show SWIFT_UNAVAILABLE_MSG("'showLiveChat' has been renamed to 'showLauncher:'");
/// This API allows you to show/hide the chat icon.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.showLauncher(_ show:true)
///
/// \endcode\param show - Boolean value determines to show/hide the chat icon 
///
+ (void)showLauncher:(BOOL)show;
/// This API is used to enable the push notification for SalesIQ SDK.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.enablePush(regid: "DEVICE TOKEN", isTestDevice: BOOL)
///
/// \endcode\param regid - String value determines device token 
///
/// \param isTestDevice - Boolean value determines the SDK environment whether it is Sandbox(TRUE) or Production(FALSE) 
///
+ (void)enablePush:(NSString * _Nonnull)regid isTestDevice:(BOOL)isTestDevice mode:(enum APNSMode)mode;
/// This API is used to process the notifcation data for the SDK and display the notification message.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.processNotificationWithInfo(info: notification.userInfo)
///
/// \endcode\param info - Notification info 
///
+ (void)processNotificationWithInfo:(NSDictionary * _Nullable)info;
+ (void)handleNotificationResponse:(NSDictionary * _Nullable)info;
/// This API is used to check whether the notifcation is related to Mobilisten or not .
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.isMobilistenNotification(notification.userInfo)
///
/// \endcode\param info - Notification info 
///
+ (BOOL)isMobilistenNotification:(NSDictionary * _Nullable)info SWIFT_WARN_UNUSED_RESULT;
/// This API is used to handle push notification custom action, call this if the action identifier is “Reply”
/// \code
/// ZohoSalesIQ. handleNotificationAction(notification.userInfo,response : "test")
///
/// \endcode\param info - Notification info, usern response string 
///
+ (void)handleNotificationAction:(NSDictionary * _Nullable)userInfo response:(NSString * _Nullable)response;
+ (void)setVisitorTrackingInterfaceHandler:(VisitorTrackingInterface * _Nullable)handler;
+ (void)setNotificationLinkHandler:(NotificationLinkHandler * _Nullable)handler;
+ (void)showInAppNotificationWithTitle:(NSString * _Nonnull)title subtitle:(NSString * _Nonnull)subtitle duration:(double)duration image:(UIImage * _Nullable)image action:(void (^ _Nonnull)(void))action;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UNUserNotificationCenter;
@class UNNotificationResponse;
@class UNNotification;

SWIFT_AVAILABILITY(ios,introduced=10.0)
@interface ZohoSalesIQ (SWIFT_EXTENSION(Mobilisten)) <UNUserNotificationCenterDelegate>
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler SWIFT_AVAILABILITY(ios,introduced=10.0);
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
@end




SWIFT_PROTOCOL("_TtP10Mobilisten23ZohoSalesIQChatDelegate_")
@protocol ZohoSalesIQChatDelegate
/// This method is called when a new chat is initiated by the visitor
- (void)chatOpenedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when an initiated chat is pickedup by an operator
- (void)chatAttendedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when a new chat is initiated by the visitor
- (void)chatMissedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when a chat is ended by a visitor or a operator
- (void)chatClosedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when a closed chat is reopened by a visitor
- (void)chatReopenedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when a rating is given for a chat by the visitor
- (void)chatRatingRecievedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when feedback for a given chat is submitted
- (void)chatFeedbackRecievedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when queue position for a queued chat changes
- (void)chatQueuePositionChangedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when unread count changes
- (void)unreadCountChanged:(NSInteger)count;
@end


SWIFT_PROTOCOL("_TtP10Mobilisten19ZohoSalesIQDelegate_")
@protocol ZohoSalesIQDelegate
/// This method is called when support agents/bots are available and online to attend support chats
- (void)agentsOnline;
/// This method is called when support agents/bots are available to pickup support chats
- (void)agentsOffline;
/// This method is called when Mobilisten UI is opened
- (void)supportOpened;
/// This method is called when Mobilisten UI is closed
- (void)supportClosed;
/// This method is called on opening the support chat window
- (void)chatViewOpenedWithId:(NSString * _Nullable)id;
/// This method is called on closing the support chat window
- (void)chatViewClosedWithId:(NSString * _Nullable)id;
/// This method is called on opening the support home screen
- (void)homeViewOpened;
/// This method is called on closing the support home screen
- (void)homeViewClosed;
/// This method is called when the visitor is IP blocked by an operator or bot.
- (void)visitorIPBlocked;
/// This method is called when a customer trigger is to be executed
- (void)handleTriggerWithName:(NSString * _Nonnull)name visitorInformation:(SIQVisitor * _Nonnull)visitorInformation;
@end


SWIFT_PROTOCOL("_TtP10Mobilisten22ZohoSalesIQFAQDelegate_")
@protocol ZohoSalesIQFAQDelegate
/// This method is called when an article opened
- (void)articleOpenedWithId:(NSString * _Nullable)id;
/// This method is called when an article is closed
- (void)articleClosedWithId:(NSString * _Nullable)id;
/// This method is called when an article is liked
- (void)articleLikedWithId:(NSString * _Nullable)id;
/// This method is called when an article is disliked
- (void)articleDislikedWithId:(NSString * _Nullable)id;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
#ifndef MOBILISTEN_SWIFT_H
#define MOBILISTEN_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import UserNotifications;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Mobilisten",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, APNSMode, open) {
  APNSModeSandbox = 0,
  APNSModeProduction = 1,
};



/// TimeStyle
/// \code
/// case curveLess
/// case roundedCurve
/// case boxUpperCurve
/// case boxLowerCurve
///
/// \endcode
typedef SWIFT_ENUM(NSInteger, BubbleStyle, open) {
/// This type is used to display the chat bubble without curve
  BubbleStyleCurveLess = 0,
/// This type is used to display the chat bubble with rounded curve
  BubbleStyleRoundedCurve = 1,
/// This type is used to display the chat bubble with upper arrow
  BubbleStyleBoxUpperCurve = 2,
/// This type is used to display the chat bubble with lower arrow
  BubbleStyleBoxLowerCurve = 3,
};




@class NSNumber;
@class SIQVisitorChat;

/// ChatActivityHandler is a NSObject class which contains the event handler methods.
SWIFT_CLASS("_TtC10Mobilisten19ChatActivityHandler")
@interface ChatActivityHandler : NSObject
/// This event handler allows you to invoke a method when the visitor enters/exits the chat window.
/// \param isinternal - Boolean determines whether visitor internal or close the chat window 
///
- (void)handleWidgetActionWithIsOpen:(BOOL)isOpen;
/// This event handler allows you to invoke a method when the user attends the chat initiated by the visitor.
/// \param visitor - SIQVisitorChat object containing the data <em>Visit Id,Attender Email,Question</em>
///
- (void)handleVisitorAttendedWithVisitor:(SIQVisitorChat * _Nonnull)visitor;
/// This event handler allows you to invoke a method, when the chat initiated by the visitor is not answered by the user or missed.
/// \param visitor - SIQVisitorChat object containing the data <em>Visit Id,Question</em>
///
- (void)handleVisitorMissedWithVisitor:(SIQVisitorChat * _Nonnull)visitor;
/// This event handler allows you to invoke a method, when the agents are offline. This will be called once after the page is loaded.
- (void)handleAgentsOffline;
/// This event handler allows you to invoke a method, when the agents are online. This will be called once after the page is loaded.
- (void)handleAgentsOnline;
/// This event handler allows you to invoke a method, when a chat session is completed.
/// \param visitor - SIQVisitorChat object containing the data <em>Visit Id,Attender Email,Question</em>
///
- (void)handleChatCompleteWithVisitor:(SIQVisitorChat * _Nonnull)visitor;
/// This event handler allows you to invoke a method, when a chat session is completed.
/// \param visitor - SIQVisitorChat object containing the data <em>Visit Id,Attender Email,Question</em>
///
- (void)handleChatReopenWithVisitor:(SIQVisitorChat * _Nonnull)visitor;
/// This event handler allows you to invoke a method, on completion of a rating.
/// \param visitor - SIQVisitorChat object containing the data <em>Visit Id,Attender Email,Question,Rating</em>
///
- (void)handleRatingWithVisitor:(SIQVisitorChat * _Nonnull)visitor;
/// This event handler allows you to invoke a method, on completion of a feedback.
/// \param visitor - SIQVisitorChat object containing the data <em>Visit Id,Attender Email,Question,Feedback</em>
///
- (void)handleFeedbackWithVisitor:(SIQVisitorChat * _Nonnull)visitor;
/// This event handler allows you to invoke a method, when unreadmessage count changes.
/// \param count - Int value** 
///
- (void)updateUnreadMessagesWithCount:(NSInteger)count;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// ChatComponent
/// \code
/// case agent
/// case rating
/// case feedback
/// case agentPhotoOnChatIcon
///
/// \endcode
typedef SWIFT_ENUM(NSInteger, ChatComponent, open) {
/// This component used to show/hide conversation history  view
  ChatComponentConversationHistory = 0,
/// This component is used to enable/disable the pre-chat form
  ChatComponentPreChatForm = 1,
/// This component used to show/hide visitor’s name if set in the chat window
  ChatComponentVisitorName = 2,
/// This component used to show/hide attender profile photo in chat window
  ChatComponentAttenderImageInChat = 3,
/// This component used to show/hide attender photo on the launcher
  ChatComponentAttenderImageOnLauncher = 4,
/// This component is used to enable/disable the option to take screenshots from the more menu
  ChatComponentScreenshotOption = 5,
/// This component is used to enable/disable sending media attachments
  ChatComponentPhotoLibrary = 6,
/// This component is used to enable/disable using camera to capture media
  ChatComponentMediaCapture = 7,
/// This component used to enable/disable voice messages
  ChatComponentVoiceMessages = 8,
/// This component is used to enable/disable file sharing from documents
  ChatComponentFileSharing = 9,
/// This component is used to enable/disable in-app notifications
  ChatComponentInAppNotifications = 10,
/// This component is used to enable/disable sending email transcript
  ChatComponentEmailTranscript = 11,
/// This component used to show/hide rating window
  ChatComponentRating = 12,
/// This component used to show/hide feedback window
  ChatComponentFeedback = 13,
};

/// ChatStatus
/// \code
/// case open
/// case waiting
/// case closed
/// case missed
///
/// \endcode
typedef SWIFT_ENUM(NSInteger, ChatStatus, open) {
/// Combined list of chats whose status include: connected, waiting, proactive, triggered
  ChatStatusOpen = 0,
/// Chats which are tiggered by a bot or an intelligent trigger
  ChatStatusTriggered = 1,
/// Chats which proactively initiated by an operator.
  ChatStatusProactive = 2,
/// Chats which are connected to an operator or bot
  ChatStatusConnected = 3,
/// Chats which are awaiting response from an operator
  ChatStatusWaiting = 4,
/// Chats which have gone missed
  ChatStatusMissed = 5,
/// Chats which have been closed
  ChatStatusClosed = 6,
/// Chats which have been closed or gone missed
  ChatStatusEnded = 7,
/// All chats
  ChatStatusAll = 8,
};


@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS("_TtC10Mobilisten17FAQCategoryEntity")
@interface FAQCategoryEntity : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

@interface FAQCategoryEntity (SWIFT_EXTENSION(Mobilisten))
@property (nonatomic, strong) NSNumber * _Nullable count;
@property (nonatomic, copy) NSString * _Nullable crc_value;
@property (nonatomic, copy) NSString * _Nullable current_server_time;
@property (nonatomic, copy) NSString * _Nullable categoryid;
@property (nonatomic, copy) NSString * _Nullable categoryname;
@end


SWIFT_CLASS("_TtC10Mobilisten14LCAdminHandler")
@interface LCAdminHandler : NSObject
- (void)setChatHandler:(ChatActivityHandler * _Nonnull)handler SWIFT_UNAVAILABLE_MSG("Use ZohoSalesIQDelegate [ZohoSalesIQ.delegate] for tracking events.");
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol ZohoSalesIQChatDelegate;
enum Language : NSInteger;
@class NSError;
@class SIQDepartment;
enum SystemMessage : NSInteger;
@class UIImage;
@class UIColor;
@class UIFont;
enum TimeStyle : NSInteger;

SWIFT_CLASS("_TtC10Mobilisten15LCSharedHandler")
@interface LCSharedHandler : NSObject
@property (nonatomic, weak) id <ZohoSalesIQChatDelegate> _Nullable delegate;
/// This API helps you to set title for the SalesIQ chat UI header.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setTitle("Zylker Live Support")
///
/// \endcodeprecondition:
/// Title should not be nil
/// \param title - Chat window title 
///
- (void)setTitle:(NSString * _Nullable)title;
/// This API allows you to clear the messages in the chat window.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.clearMessages()
///
/// \endcode
- (void)clearMessages;
- (void)clearData;
- (void)setQuestion:(NSString * _Nullable)question;
/// This API is used to set a question and initiate a chat. This question will be sent immediately when the chat window is internaled i.e., the Chat will be initiated.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.startChat(question: "Hello, I need assistance.")
///
/// \endcodeprecondition:
/// Question should not be nil
/// \param question - String value determines question to initiate the chat 
///
- (void)startChatWithQuestion:(NSString * _Nonnull)question;
/// Use this  variable to check if a new chat can be started from the SalesIQ SDK.
/// This value changes based on the portal configuration
/// (Buissness hours, chat enabled, IP Blocked, Embed Offline)
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.isEnabled
///
///
/// \endcode<ul>
///   <li>
///   </li>
/// </ul>
@property (nonatomic, readonly) BOOL isEnabled;
/// This API allows you to set the email address of a particular user to route the chats received from the visitors. If the Email address is provided in the API, then the visitor chats received in the application will be routed only to that specific user.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setAgentEmail("patricia@zylker.com")
///
/// \endcodenote:
/// If the User email address is provided in this API, then all the chats received from the visitor will be routed only to the particular user. Other users will not receive any chat notification from the visitors. If the mapped user is offline/Busy/engaged, then the chats will be routed to the other available users.
/// \param email - Agent email id 
///
- (void)setAgentEmail:(NSString * _Nullable)email;
/// This API allows you to set a language for the Chat Widget.The language you would like to set in the chat widget will reflect, if you provide the name of the language in this API.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setLanguage(Language.english.languageCodeName())
///
///
/// \endcode\param language - Language name 
///
- (void)setLanguage:(enum Language)language;
/// This API allows you to set a language for the Chat Widget.The language you would like to set in the chat widget will reflect, if you provide the name of the language in this API.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setLanguageWithCode("en")
///
///
/// \endcode\param languageCode - Language code 
///
- (void)setLanguageWithCode:(NSString * _Nonnull)languageCode;
/// This API allows you to get a list of all connected chats.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.getList(filter: .open)
///
///
/// \endcode\param language - Language name 
///
- (void)getListWithFilter:(enum ChatStatus)filter completion:(void (^ _Nullable)(NSError * _Nullable, NSArray<SIQVisitorChat *> * _Nullable))completion;
- (void)getDepartmentsWithCompletion:(void (^ _Nullable)(NSError * _Nullable, NSArray<SIQDepartment *> * _Nullable))completion;
/// Use this  variable to check if a user can have multiple parallely open chats.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.isParallelChatsEnabled
///
///
/// \endcode<ul>
///   <li>
///   </li>
/// </ul>
@property (nonatomic, readonly) BOOL multipleOpenRestricted;
/// This API allows you to display only the required departments in the pre-chat form. All other configured departments will be hidden regardless of their status.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setDepartment("ZylkerSales")
///
/// \endcodeprecondition:
/// Department name should not be nil
/// \param department - Department name 
///
- (void)setDepartment:(NSString * _Nullable)department;
- (void)setDepartments:(NSArray<NSString *> * _Nullable)departments;
/// This API allows you to handle the visibility of User’s photo, Rating, Feedback i.e., you can enable or disable the users photo, rating and feedback in the chat window.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setVisibility(.agent, visible: true)
///
/// \endcodenote:
/// By default, the Rating and feeback will be enabled.
/// \param component - Enum determines type of ChatComponent (agent,rating,feedback,agentPhotoOnChatIcon) 
///
/// \param visible - Boolean value determine to show or hide the component 
///
- (void)setVisibility:(enum ChatComponent)component visible:(BOOL)visible;
/// This API is used to customize the system messages displayed in the chat widget.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setMessage(.chatCompleted, message: "Thank You for contacting us! Please leave us your valuable feedback.")
///
/// \endcode\param type - Enum determines type of SystemMessage (chatCompleted,ratingCompleted,feedbackCompleted,ratingAndFeedbackCompleted) 
///
/// \param message - String value determine message to be displayed for SystemMessage 
///
- (void)setMessage:(enum SystemMessage)type message:(NSString * _Nullable)message;
- (void)setCustomChatIconWithImage:(UIImage * _Nullable)image isTemplateImage:(BOOL)isTemplateImage;
/// This API allows you to display the visitor’s photo in the chat window.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setVisitorImage(image: "IMAGENAME")
///
/// \endcodeprecondition:
/// Image should not be nil
/// \param image - Vistor image 
///
- (void)setVisitorImage:(UIImage * _Nullable)image SWIFT_AVAILABILITY(ios,unavailable,message="This method has been depricated.");
/// This API allows you to customize your theme color of the chat window.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setThemeColor(UIColor.greenColor())
///
/// \endcode\param color - UIColor 
///
- (void)setThemeColor:(UIColor * _Nullable)color SWIFT_DEPRECATED_MSG("Customize the themeColor using `customTheme.themeColor` property in object from ZohoSalesIQ.Theme.baseTheme and set the custom theme using the ZohoSalesIQ.Theme.setTheme method");
/// This API allows you to customize the navigationbar color.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setBarColor(UIColor.blackColor())
///
/// \endcode\param color - UIColor 
///
- (void)setBarColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED_MSG("Customize in theme object using `customTheme.Navigation.backgroundColor` from ZohoSalesIQ.Theme.baseTheme and set the theme using the ZohoSalesIQ.Theme.setTheme method.");
/// This API allows you to customize the navigationbar contents color like barbuttons  and searchbar contents.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setBarTintColor(UIColor.whiteColor())
///
/// \endcode\param color - UIColor 
///
- (void)setBarTintColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED_MSG("Customize in theme object using `customTheme.Navigation.tintColor` from ZohoSalesIQ.Theme.baseTheme and set the theme using the ZohoSalesIQ.Theme.setTheme method.");
/// This API allows you to customize the navigationbar title text color.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setBarTitleColor(UIColor.black)
///
/// \endcode\param color - UIColor 
///
- (void)setBarTitleColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED_MSG("Customize in theme object using `customTheme.Navigation.titleColor` from ZohoSalesIQ.Theme.baseTheme and set the theme using the ZohoSalesIQ.Theme.setTheme method.");
/// This API allows you to customize the UISearchController tint color.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setSearchTintColor(UIColor.black)
///
/// \endcode\param color - UIColor 
///
- (void)setSearchTintColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED;
- (void)setBarTitleFont:(UIFont * _Nonnull)font SWIFT_AVAILABILITY(ios,unavailable,message="This API is under construction.");
/// This API allows you to set the backgroundColor of the chat window.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setMessageWindowBackgroundColor(UIColor.darkGray)
///
/// \endcode\param color - UIColor 
///
- (void)setMessageWindowBackgroundColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED_MSG("Customize in theme object using `customTheme.Chat.backgroundColor` from ZohoSalesIQ.Theme.baseTheme and set the customized theme using the ZohoSalesIQ.Theme.setTheme method.");
/// This API allows you to set the incomming message backgroundColor.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setIncommingMessageBackgroundColor(UIColor.lightGray)
///
/// \endcode\param color - UIColor 
///
- (void)setIncommingMessageBackgroundColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED_MSG("Customize in theme object using `customTheme.Chat.Message.Common.incomingBackgroundColor` from ZohoSalesIQ.Theme.baseTheme and set the customized theme using the ZohoSalesIQ.Theme.setTheme method.");
/// This API allows you to set the outgoing message backgroundColor.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setOutgoingMessageBackgroundColor(UIColor.blue)
///
/// \endcode\param color - UIColor 
///
- (void)setOutgoingMessageBackgroundColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED_MSG("Customize in theme object using `customTheme.Chat.Message.Common.outgoingBackgroundColor` from ZohoSalesIQ.Theme.baseTheme and set the customized theme using the ZohoSalesIQ.Theme.setTheme method.");
/// This API allows you to set the time display style of the chat window.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setTimeDisplayStyle(.inside)
///
/// \endcode\param style - Enum determines type of TimeStyle(inside,outsideSlide) 
///
- (void)setTimeDisplayStyle:(enum TimeStyle)style SWIFT_AVAILABILITY(ios,unavailable,message="This method has been depricated.");
- (void)setFAQDepartmentVisibility:(BOOL)visible;
- (void)setFAQCategoryVisibility:(BOOL)visible;
/// This API allows you to get the unreadmessage count from current ongoing chat.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.getUnreadMessageCount()
///
/// \endcode<ul>
///   <li>
///     Returns unreadmessages count
///   </li>
/// </ul>
- (NSInteger)getUnreadMessageCount SWIFT_WARN_UNUSED_RESULT;
/// This API allows you to set end the active chat session.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.endSession(referenceID: String)
///
/// \endcode
- (void)endSessionWithReferenceID:(NSString * _Nonnull)referenceID;
/// This API allows you to showOfflineMessage.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.showOfflineMessage(true)
///
/// \endcode
- (void)showOfflineMessage:(BOOL)show;
/// This API allows you to set offline message.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.setOfflineMessage("Hi there! Looks like none of our operators are available right now to assit you. Do drop us a message and we will get back to you ASAP.")
///
/// \endcode
- (void)setOfflineMessage:(NSString * _Nullable)message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// This API allows you to fetch operator image give a visitor chat object
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.fetchAttenderImage(chat: SIQVisitorChat, fetchDefaultImage: Bool)
///
/// \endcode
- (void)fetchAttenderImageWithChat:(SIQVisitorChat * _Nonnull)chat fetchDefaultImage:(BOOL)fetchDefaultImage completion:(void (^ _Nullable)(NSError * _Nullable, UIImage * _Nullable))completion;
/// This API allows you to show the Chat Window i.e., to internal the chat window automatically.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Chat.show()
/// ZohoSalesIQ.Chat.show(referenceID: String)
/// ZohoSalesIQ.Chat.show(new: Bool)
///
/// \endcode
- (void)showWithReferenceID:(NSString * _Nullable)referenceID new:(BOOL)new_;
@end




typedef SWIFT_ENUM(NSInteger, Language, open) {
  LanguageEnglish = 0,
  LanguageFrench = 1,
  LanguageGerman = 2,
  LanguageSpanish = 3,
  LanguageDutch = 4,
  LanguageNorwegian = 5,
  LanguageTurkish = 6,
  LanguageRussian = 7,
  LanguagePortuguese = 8,
  LanguageItalian = 9,
  LanguageKorean = 10,
  LanguageJapanese = 11,
  LanguageDanish = 12,
  LanguagePolish = 13,
  LanguageArabic = 14,
  LanguageHungarian = 15,
  LanguageChinese = 16,
  LanguageHebrew = 17,
  LanguageIrish = 18,
  LanguageRomanian = 19,
  LanguageThai = 20,
  LanguageSwedish = 21,
  LanguageGreek = 22,
  LanguageCzech = 23,
  LanguageSlovak = 24,
  LanguageSlovenian = 25,
  LanguageCroatian = 26,
  LanguageInstance = 27,
};


SWIFT_CLASS("_TtC10Mobilisten12LanguageCode")
@interface LanguageCode : NSObject
+ (NSString * _Nonnull)name:(enum Language)language SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UITraitCollection;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC10Mobilisten17SIQViewController")
@interface SIQViewController : UIViewController
- (void)viewDidLoad;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIGestureRecognizer;
@protocol UIViewControllerAnimatedTransitioning;
@class UITextView;

SWIFT_CLASS("_TtC10Mobilisten22LiveChatViewController")
@interface LiveChatViewController : SIQViewController <UIGestureRecognizerDelegate, UIViewControllerTransitioningDelegate>
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, copy) NSString * _Nullable title;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
@property (nonatomic, readonly) BOOL shouldAutorotate;
- (void)didReceiveMemoryWarning;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (void)didMoveToParentViewController:(UIViewController * _Nullable)parent;
- (void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UIDocumentPickerViewController;
@class NSURL;

@interface LiveChatViewController (SWIFT_EXTENSION(Mobilisten)) <UIDocumentPickerDelegate>
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentsAtURLs:(NSArray<NSURL *> * _Nonnull)urls;
@end

@class UIPopoverPresentationController;

@interface LiveChatViewController (SWIFT_EXTENSION(Mobilisten)) <UIPopoverPresentationControllerDelegate>
- (BOOL)popoverPresentationControllerShouldDismissPopover:(UIPopoverPresentationController * _Nonnull)popoverPresentationController SWIFT_WARN_UNUSED_RESULT;
@end






@class UITextField;

@interface LiveChatViewController (SWIFT_EXTENSION(Mobilisten)) <UITextFieldDelegate>
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end




@interface LiveChatViewController (SWIFT_EXTENSION(Mobilisten)) <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidBeginEditing:(UITextView * _Nonnull)textView;
- (void)textViewDidChangeSelection:(UITextView * _Nonnull)textView;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end
















SWIFT_CLASS("_TtC10Mobilisten23NotificationLinkHandler")
@interface NotificationLinkHandler : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten16SIQActionHandler")
@interface SIQActionHandler : NSObject
- (void)successWithMessage:(NSString * _Nullable)message;
- (void)faliureWithMessage:(NSString * _Nullable)message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SIQChatAction;

SWIFT_CLASS("_TtC10Mobilisten17SIQActionRegistry")
@interface SIQActionRegistry : NSObject
- (void)registerWithAction:(SIQChatAction * _Nonnull)action;
- (void)unregisterWithNameWithName:(NSString * _Nonnull)name;
- (void)unregisterAll;
- (void)setTimeout:(double)timeout;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten19SIQAudioPlayerTheme")
@interface SIQAudioPlayerTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified thumbColor;
@property (nonatomic, strong) UIColor * _Null_unspecified playButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingTrackColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingTrackColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingButtonIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingButtonIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingDurationTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingDurationTextColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SIQChatActionArguments;

SWIFT_CLASS("_TtC10Mobilisten13SIQChatAction")
@interface SIQChatAction : NSObject
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name action:(void (^ _Nonnull)(SIQChatActionArguments * _Nonnull, SIQActionHandler * _Nonnull))action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10Mobilisten22SIQChatActionArguments")
@interface SIQChatActionArguments : NSObject
@property (nonatomic, copy) NSString * _Nonnull type;
@property (nonatomic, copy) NSString * _Nonnull label;
@property (nonatomic, copy) NSString * _Nonnull identifier;
@property (nonatomic, copy) NSString * _Nullable elementID;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10Mobilisten16SIQChatFormTheme")
@interface SIQChatFormTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTintColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldPlaceholderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTitleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldRequiredIndicatorColor;
@property (nonatomic, strong) UIColor * _Null_unspecified errorColor;
@property (nonatomic, strong) UIColor * _Null_unspecified submitButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified submitButtonTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified campaignOptInTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified checkboxCheckedColor;
@property (nonatomic, strong) UIColor * _Null_unspecified checkboxUncheckedColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten17SIQChatInputTheme")
@interface SIQChatInputTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified audioRecordHintBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified audioRecordHintTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldBorderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTintColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldPlaceholderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified attachmentButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordSoundPulseBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified sendButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified buttonDisabledBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordTimerBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordTimerTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordTimerIndicatorColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordSlideTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordSlideIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordCancelTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified moreIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified sendIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified recordIconColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SIQLauncherUnreadBadgeTheme;

SWIFT_CLASS("_TtC10Mobilisten24SIQChatScrollButtonTheme")
@interface SIQChatScrollButtonTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified iconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) SIQLauncherUnreadBadgeTheme * _Nonnull UnreadBadge;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SIQMessageTheme;
@class SIQHandOffBannerTheme;
@class SIQQueueBannerTheme;
@class SIQEmailTranscriptTheme;

SWIFT_CLASS("_TtC10Mobilisten18SIQChatWindowTheme")
@interface SIQChatWindowTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIImage * _Null_unspecified backgroundImage;
@property (nonatomic, strong) SIQMessageTheme * _Nonnull Message;
@property (nonatomic, strong) SIQHandOffBannerTheme * _Nonnull HandOffBanner;
@property (nonatomic, strong) SIQQueueBannerTheme * _Nonnull QueueBanner;
@property (nonatomic, strong) SIQChatInputTheme * _Nonnull Input;
@property (nonatomic, strong) SIQChatScrollButtonTheme * _Nonnull ScrollButton;
@property (nonatomic, strong) SIQEmailTranscriptTheme * _Nonnull EmailTranscript;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten28SIQConversationListItemTheme")
@interface SIQConversationListItemTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified timerTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified timerIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified titleTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified subtitleTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified timeTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified openBadgeBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified openBadgeBorderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified openBadgeTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified separatorColor;
@property (nonatomic, strong) SIQLauncherUnreadBadgeTheme * _Nonnull UnreadBadge;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten20SIQConversationTheme")
@interface SIQConversationTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) SIQConversationListItemTheme * _Nonnull ListItem;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten21SIQConversationsClass")
@interface SIQConversationsClass : NSObject
- (void)setVisibility:(BOOL)visible;
- (void)setTitle:(NSString * _Nonnull)title;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten13SIQDepartment")
@interface SIQDepartment : NSObject
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id name:(NSString * _Nonnull)name available:(BOOL)available OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic) BOOL available;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10Mobilisten23SIQEmailTranscriptTheme")
@interface SIQEmailTranscriptTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTintColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten17SIQEmptyViewTheme")
@interface SIQEmptyViewTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified chatButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified chatButtonTitleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSDate;

SWIFT_CLASS("_TtC10Mobilisten13SIQFAQArticle")
@interface SIQFAQArticle : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic) BOOL isRated;
@property (nonatomic) NSInteger viewCount;
@property (nonatomic) NSInteger likeCount;
@property (nonatomic) NSInteger dislikeCount;
@property (nonatomic, copy) NSString * _Nonnull categoryName;
@property (nonatomic, copy) NSString * _Nonnull categoryID;
@property (nonatomic, copy) NSDate * _Nullable createdTime;
@property (nonatomic, copy) NSDate * _Nullable lastModifiedTime;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10Mobilisten14SIQFAQCategory")
@interface SIQFAQCategory : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) NSInteger articleCount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol ZohoSalesIQFAQDelegate;

SWIFT_CLASS("_TtC10Mobilisten11SIQFAQClass")
@interface SIQFAQClass : NSObject
@property (nonatomic, weak) id <ZohoSalesIQFAQDelegate> _Nullable delegate;
/// This get-only property allows you to check if Articles are enabled in portal settings.
/// <h2>Usage Example</h2>
/// \code
/// let faqEnabled = ZohoSalesIQ.FAQ.isEnabled
///
/// \endcode
@property (nonatomic, readonly) BOOL isEnabled;
/// This API allows you to set the number of recent search entries
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.FAQ.setRecentShowLimit(5)
///
/// \endcode\param limit - Int 
///
- (void)setRecentShowLimit:(NSInteger)limit;
/// This API allows you to get list of all categories from your knowledge base.
/// The API provides an asynchronous callback with error and an array of SIQFAQCategory objects.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.FAQ.getCategories()
///
/// \endcode
- (void)getCategories:(void (^ _Nullable)(NSError * _Nullable, NSArray<SIQFAQCategory *> * _Nullable))completion;
/// This API allows you to toggle visibility of FAQ in Mobilisten UI.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.FAQ.setVisibility(true)
///
/// \endcode
- (void)setVisibility:(BOOL)visible;
/// This API allows you to get list of all categories from your knowledge base.
/// The API provides an asynchronous callback with error and an array of SIQFAQArticle objects.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.FAQ.getArticles(categoryID: "1002")
///
/// \endcode\param categoryID - String 
///
- (void)getArticlesWithCategoryID:(NSString * _Nullable)categoryID :(void (^ _Nullable)(NSError * _Nullable, NSArray<SIQFAQArticle *> * _Nullable))completion;
/// This API allows you to open an article
/// This API is designed to work with the getArticles list API and
/// articleID can be obtained from the results of the getArticles API.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.FAQ.getArticles(articleID: "1002")
///
/// \endcode\param articleID - String 
///
- (void)openArticleWithArticleID:(NSString * _Nonnull)articleID :(void (^ _Nullable)(NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten19SIQFAQListItemTheme")
@interface SIQFAQListItemTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified titleTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified subtitleTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified subtitlePartitionColor;
@property (nonatomic, strong) UIColor * _Null_unspecified likePendingColor;
@property (nonatomic, strong) UIColor * _Null_unspecified likedColor;
@property (nonatomic, strong) UIColor * _Null_unspecified separatorColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten11SIQFAQTheme")
@interface SIQFAQTheme : NSObject
@property (nonatomic, strong) SIQFAQListItemTheme * _Nonnull ListItem;
@property (nonatomic, strong) UIColor * _Null_unspecified headerTextColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten16SIQFeedbackTheme")
@interface SIQFeedbackTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified primaryTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified secondaryTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified skipButtonTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified submitButtonTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified submitButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified feedbackTextFieldTintColor;
@property (nonatomic, strong) UIColor * _Null_unspecified feedbackPlaceholderTextColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten21SIQHandOffBannerTheme")
@interface SIQHandOffBannerTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified buttonTitleColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten25SIQInAppNotificationTheme")
@interface SIQInAppNotificationTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified titleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified subtitleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified imageBackgroundColor;
@property (nonatomic, strong) NSNumber * _Null_unspecified cornerRadius;
@property (nonatomic, strong) NSNumber * _Null_unspecified imageCornerRadius;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten19SIQInfoMessageTheme")
@interface SIQInfoMessageTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified lineColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten17SIQInputCardTheme")
@interface SIQInputCardTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified titleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textFieldPlaceholderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified sendButtonBackgroudColor;
@property (nonatomic, strong) UIColor * _Null_unspecified sendButtonIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified separatorColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten16SIQLauncherTheme")
@interface SIQLauncherTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified iconColor;
@property (nonatomic, strong) SIQLauncherUnreadBadgeTheme * _Nonnull UnreadBadge;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten27SIQLauncherUnreadBadgeTheme")
@interface SIQLauncherUnreadBadgeTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified borderColor;
@property (nonatomic, strong) NSNumber * _Null_unspecified borderWidth;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten21SIQMessageCommonTheme")
@interface SIQMessageCommonTheme : NSObject
@property (nonatomic, strong) NSNumber * _Null_unspecified botTypingIndicatorStyle;
@property (nonatomic, strong) UIColor * _Null_unspecified messageSenderNameColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingBorderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingTimeTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified outgoingTimeIconColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingBorderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingTimeTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified incomingTimeIconColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SIQSuggestionTheme;
@class SIQSkipActionButtonTheme;
@class SIQSelectionComponentTheme;
@class SIQSliderCardTheme;

SWIFT_CLASS("_TtC10Mobilisten15SIQMessageTheme")
@interface SIQMessageTheme : NSObject
@property (nonatomic, strong) SIQMessageCommonTheme * _Nonnull Common;
@property (nonatomic, strong) SIQSuggestionTheme * _Nonnull Suggestion;
@property (nonatomic, strong) SIQSkipActionButtonTheme * _Nonnull SkipActionButton;
@property (nonatomic, strong) SIQAudioPlayerTheme * _Nonnull AudioPlayer;
@property (nonatomic, strong) SIQSelectionComponentTheme * _Nonnull Selection;
@property (nonatomic, strong) SIQInputCardTheme * _Nonnull InputCard;
@property (nonatomic, strong) SIQSliderCardTheme * _Nonnull Slider;
@property (nonatomic, strong) SIQInfoMessageTheme * _Nonnull InfoMessage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten18SIQNavigationTheme")
@interface SIQNavigationTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified titleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten24SIQNoNetworkBannnerTheme")
@interface SIQNoNetworkBannnerTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified loaderColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten21SIQOfflineBannerTheme")
@interface SIQOfflineBannerTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten19SIQQueueBannerTheme")
@interface SIQQueueBannerTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified titleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified subtitleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified subtitleTimeColor;
@property (nonatomic, strong) UIColor * _Null_unspecified positionTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified positionSubtitleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified positionContainerBackgroundColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten26SIQSelectionComponentTheme")
@interface SIQSelectionComponentTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified accessoryColor;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified selectionBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified buttonTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified buttonBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified linkTextColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten24SIQSkipActionButtonTheme")
@interface SIQSkipActionButtonTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified borderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) NSNumber * _Null_unspecified cornerRadius;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten18SIQSliderCardTheme")
@interface SIQSliderCardTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified thumbBorderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified selectedTrackColor;
@property (nonatomic, strong) UIColor * _Null_unspecified selectedValueTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified unSelectedTrackColor;
@property (nonatomic, strong) UIColor * _Null_unspecified thumbBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified minRangeTextColor;
@property (nonatomic, strong) UIColor * _Null_unspecified maxRangeTextColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten18SIQSuggestionTheme")
@interface SIQSuggestionTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Null_unspecified borderColor;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) NSNumber * _Null_unspecified cornerRadius;
@property (nonatomic, strong) NSNumber * _Null_unspecified displayStyle;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten14SIQTabBarTheme")
@interface SIQTabBarTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified activeTabColor;
@property (nonatomic, strong) UIColor * _Null_unspecified inactiveTabColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSAttributedString;
@class NSTextContainer;

IB_DESIGNABLE
SWIFT_CLASS("_TtC10Mobilisten11SIQTextView")
@interface SIQTextView : UITextView
@property (nonatomic, copy) IBInspectable NSString * _Nonnull placeholder;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull placeholderColor;
@property (nonatomic, strong) UIFont * _Null_unspecified font;
@property (nonatomic) NSTextAlignment textAlignment;
@property (nonatomic, copy) NSString * _Null_unspecified text;
@property (nonatomic, strong) NSAttributedString * _Null_unspecified attributedText;
@property (nonatomic) UIEdgeInsets textContainerInset;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC10Mobilisten8SIQTheme")
@interface SIQTheme : NSObject
@property (nonatomic, strong) UIColor * _Null_unspecified themeColor;
@property (nonatomic, strong) SIQLauncherTheme * _Nonnull Launcher;
@property (nonatomic, strong) SIQTabBarTheme * _Nonnull TabBar;
@property (nonatomic, strong) SIQNavigationTheme * _Nonnull Navigation;
@property (nonatomic, strong) SIQEmptyViewTheme * _Nonnull EmptyView;
@property (nonatomic, strong) SIQOfflineBannerTheme * _Nonnull OfflineBanner;
@property (nonatomic, strong) SIQNoNetworkBannnerTheme * _Nonnull NetworkWaitingBanner;
@property (nonatomic, strong) SIQConversationTheme * _Nonnull Conversation;
@property (nonatomic, strong) SIQFAQTheme * _Nonnull FAQ;
@property (nonatomic, strong) SIQChatWindowTheme * _Nonnull Chat;
@property (nonatomic, strong) SIQChatFormTheme * _Nonnull Form;
@property (nonatomic, strong) SIQFeedbackTheme * _Nonnull Feedback;
@property (nonatomic, strong) SIQInAppNotificationTheme * _Nonnull InAppNotification;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC10Mobilisten10SIQVisitor")
@interface SIQVisitor : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSString * _Nullable phone;
@property (nonatomic, copy) NSString * _Nullable browser;
@property (nonatomic, copy) NSString * _Nullable os;
@property (nonatomic, copy) NSString * _Nullable ip;
@property (nonatomic, copy) NSString * _Nullable countryCode;
@property (nonatomic, copy) NSString * _Nullable searchEngine;
@property (nonatomic, copy) NSString * _Nullable searchQuery;
@property (nonatomic, copy) NSString * _Nullable region;
@property (nonatomic, copy) NSString * _Nullable state;
@property (nonatomic, copy) NSString * _Nullable city;
@property (nonatomic, strong) NSNumber * _Nullable numberOfChats;
@property (nonatomic, strong) NSNumber * _Nullable numberOfVisits;
@property (nonatomic, strong) NSNumber * _Nullable noOfDaysVisited;
@property (nonatomic, strong) NSNumber * _Nullable totalTimeSpent;
@property (nonatomic, copy) NSDate * _Nullable firstVisitTime;
@property (nonatomic, copy) NSDate * _Nullable lastVisitTime;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten14SIQVisitorChat")
@interface SIQVisitorChat : NSObject
@property (nonatomic, copy) NSString * _Nullable attenderEmail;
@property (nonatomic, copy) NSString * _Nullable attenderID;
@property (nonatomic, copy) NSString * _Nullable attenderName;
@property (nonatomic, copy) NSString * _Nullable departmentName;
@property (nonatomic, copy) NSString * _Nullable feedback;
@property (nonatomic) BOOL isBotAttender;
@property (nonatomic, copy) NSString * _Nullable lastMessage;
@property (nonatomic, copy) NSString * _Nullable lastMessageSender;
@property (nonatomic, copy) NSString * _Nullable question;
@property (nonatomic, copy) NSString * _Nullable rating;
@property (nonatomic, copy) NSString * _Nullable referenceID;
@property (nonatomic) enum ChatStatus status;
@property (nonatomic, copy) NSDate * _Nullable lastMessageTime;
@property (nonatomic) NSInteger unreadCount;
@property (nonatomic) NSInteger queuePosition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10Mobilisten18SIQVisitorLocation")
@interface SIQVisitorLocation : NSObject
@property (nonatomic, copy) NSString * _Nullable countryCode;
@property (nonatomic, strong) NSNumber * _Nullable latitude;
@property (nonatomic, strong) NSNumber * _Nullable longitude;
@property (nonatomic, copy) NSString * _Nullable city;
@property (nonatomic, copy) NSString * _Nullable zipCode;
@property (nonatomic, copy) NSString * _Nullable state;
@property (nonatomic, copy) NSString * _Nullable country;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten19SheetViewController")
@interface SheetViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_MSG("Use the init(controller:, sizes:) initializer");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)dismissViewControllerAnimated:(BOOL)flag completion:(void (^ _Nullable)(void))completion;
@end

@class UITouch;

@interface SheetViewController (SWIFT_EXTENSION(Mobilisten)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, SuggestionStyle, open) {
/// Suggestions with a grid style
  SuggestionStyleVertical = 0,
/// Suggestions with horizontal scrolling
  SuggestionStyleHorizontal = 1,
};

typedef SWIFT_ENUM(NSInteger, SystemMessage, open) {
/// This system type is used to set the message when chat is completed
  SystemMessageChatCompleted = 0,
/// This system type is used to set the message when chat is missed
  SystemMessageChatMissed = 1,
/// This system type is used to set the message when rating is completed
  SystemMessageRatingCompleted = 2,
/// This system type is used to set the message when feedback is completed
  SystemMessageFeedbackCompleted = 3,
/// This system type is used to set the message when rating and feedback is completed
  SystemMessageRatingAndFeedbackCompleted = 4,
/// This system type is used to set the enter your question input placeholder before starting a chat
  SystemMessageInputQuestionPlaceholder = 5,
/// This system type is used to set the enter your message input placeholder in chat
  SystemMessageInputMessagePlaceholder = 6,
/// This system type is used to set the typing message if the typing style is set to 1
  SystemMessageTypingIndicatorMessage = 7,
/// This system type is used to set the message shown in the no network banner
  SystemMessageNetworkWaitingMessage = 8,
/// This system type is used to set the message shown in the chat window and conversations list when a chat is in waiting state
  SystemMessageChatWaiting = 9,
};


SWIFT_CLASS("_TtC10Mobilisten11ThemeConfig")
@interface ThemeConfig : NSObject
@property (nonatomic, readonly, strong) SIQTheme * _Nonnull baseTheme;
@property (nonatomic, readonly, strong) SIQTheme * _Nonnull currentCustomTheme;
- (void)forceUserInterfaceStyleWithStyle:(UIUserInterfaceStyle)style SWIFT_AVAILABILITY(ios,introduced=13.0);
- (void)setThemeWithTheme:(SIQTheme * _Nonnull)theme;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// TimeStyle
/// \code
/// case inside
/// case outsideSlide
///
/// \endcode
typedef SWIFT_ENUM(NSInteger, TimeStyle, open) {
/// This type is used to display the message time inside the chat bubble
  TimeStyleInside = 0,
/// This type is used to display the message time on user sliding the chat message
  TimeStyleOutsideSlide = 1,
};


SWIFT_CLASS("_TtC10Mobilisten13TrackingClass")
@interface TrackingClass : NSObject
/// This API is used to set title in each page for tracking the foot-path of the visitor while navigating from one page to the other.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Tracking.setPageTitle(title: "CURRENT PAGE TITLE")
///
/// \endcodeprecondition:
/// Page tile should not be nil
/// \param title - String value determines current page title 
///
- (void)setPageTitle:(NSString * _Nonnull)title;
/// This API allows you to track the custom actions performed by the visitors in the mobile application.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Tracking.setCustomAction(name: "BUTTON TAPPED")
///
/// \endcodeprecondition:
/// Action name should not be nil
/// \param actionname - String value determines custom action name 
///
- (void)setCustomAction:(NSString * _Nullable)actionname;
- (void)setCustomAction:(NSString * _Nullable)actionname action:(id _Nullable)action;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





















































SWIFT_CLASS("_TtC10Mobilisten12VisitorClass")
@interface VisitorClass : NSObject
/// This API is used to fill the visitor’s name in the chat widget text box.Even if the visitor name field is hidden from the chat widget, the API can still set the visitor name and display it to the agent.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.setName(name: "NAME")
///
/// \endcodeprecondition:
/// Visitor name should not be nil
/// \param name - String value determines visitor name 
///
- (void)setName:(NSString * _Nullable)name;
/// This API is used to set the Visitor’s location in the Visitor Object.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.setLocation(location: SIQVisitorLocation)
///
/// \endcode\param location - instance of SIQVisitorLocation class 
///
- (void)setLocation:(SIQVisitorLocation * _Nullable)location;
/// This API is used to fill the visitor email address in the chat widget text box.Even if the visitor email field is hidden from the chat widget, the API can still set the visitor email address and display it to the User.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.setEmail(email: "EMAIL")
///
/// \endcodeprecondition:
/// Email should not be nil
/// \param email - String value determines visitor email 
///
- (void)setEmail:(NSString * _Nullable)email;
/// This API is used to fill the visitor contact number in the chat widget text box.Even if the visitor contact number field is hidden from the chat widget, the API can still set the visitor contact number and display it to the user.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.setContactNumber(contactnumber: "PHONE NUMBER")
///
/// \endcodeprecondition:
/// Phone number should not be nil
/// \param number - String value determines visitor phone number 
///
- (void)setContactNumber:(NSString * _Nullable)number;
/// This API allows you to add the additional information about the visitor and displays it to the User in the visitor information section. These information are not visible to the visitors.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.addInfo("Gender", value: “Male”)
///
/// \endcodeprecondition:
/// key and value should not be nil
/// \param key - String value determines key for visitor info 
///
/// \param value - String value determines value for visitor info 
///
- (void)addInfo:(NSString * _Nullable)key value:(NSString * _Nullable)value;
/// This API is used to pre-fill a question in the chat widget.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.setQuestion("Hello, I need assistance.")
///
/// \endcodeprecondition:
/// question should not be nil
/// \param question - String value determines question to pre fill in the input field 
///
- (void)setQuestion:(NSString * _Nullable)question;
/// This API is used to trigger a custom action with a defined name
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.Visitor.setQuestion("Hello, I need assistance.")
///
/// \endcodeprecondition:
/// question should not be nil
/// \param question - String value determines question to pre fill in the input field 
///
- (void)performCustomAction:(NSString * _Nonnull)name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten13VisitorObject")
@interface VisitorObject : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10Mobilisten24VisitorTrackingInterface")
@interface VisitorTrackingInterface : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol ZohoSalesIQDelegate;

SWIFT_CLASS("_TtC10Mobilisten11ZohoSalesIQ")
@interface ZohoSalesIQ : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) LCSharedHandler * _Nonnull Chat;)
+ (LCSharedHandler * _Nonnull)Chat SWIFT_WARN_UNUSED_RESULT;
+ (void)setChat:(LCSharedHandler * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) LCAdminHandler * _Nonnull Admin;)
+ (LCAdminHandler * _Nonnull)Admin SWIFT_WARN_UNUSED_RESULT;
+ (void)setAdmin:(LCAdminHandler * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) VisitorClass * _Nonnull Visitor;)
+ (VisitorClass * _Nonnull)Visitor SWIFT_WARN_UNUSED_RESULT;
+ (void)setVisitor:(VisitorClass * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) TrackingClass * _Nonnull Tracking;)
+ (TrackingClass * _Nonnull)Tracking SWIFT_WARN_UNUSED_RESULT;
+ (void)setTracking:(TrackingClass * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) ThemeConfig * _Nonnull Theme;)
+ (ThemeConfig * _Nonnull)Theme SWIFT_WARN_UNUSED_RESULT;
+ (void)setTheme:(ThemeConfig * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SIQActionRegistry * _Nonnull ChatActions;)
+ (SIQActionRegistry * _Nonnull)ChatActions SWIFT_WARN_UNUSED_RESULT;
+ (void)setChatActions:(SIQActionRegistry * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SIQFAQClass * _Nonnull FAQ;)
+ (SIQFAQClass * _Nonnull)FAQ SWIFT_WARN_UNUSED_RESULT;
+ (void)setFAQ:(SIQFAQClass * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SIQConversationsClass * _Nonnull Conversation;)
+ (SIQConversationsClass * _Nonnull)Conversation SWIFT_WARN_UNUSED_RESULT;
+ (void)setConversation:(SIQConversationsClass * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable apiDefinedPageTitle;)
+ (NSString * _Nullable)apiDefinedPageTitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setApiDefinedPageTitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, weak) id <ZohoSalesIQDelegate> _Nullable delegate;)
+ (id <ZohoSalesIQDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setDelegate:(id <ZohoSalesIQDelegate> _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable deviceToken;)
+ (NSString * _Nullable)deviceToken SWIFT_WARN_UNUSED_RESULT;
+ (void)setDeviceToken:(NSString * _Nullable)value;
/// This API allows you to set unique id for the visitor after login.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.registerVisitor("abc@mail.com")
///
/// \endcode
+ (void)registerVisitor:(NSString * _Nullable)id completion:(void (^ _Nullable)(BOOL))completion;
/// This API allows you to unregister visitor and clears all data after logout.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.unregisterVisitor()
///
/// \endcode
+ (void)unregisterVisitorWithCompletion:(void (^ _Nullable)(BOOL))completion;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull running_platform;)
+ (NSString * _Nonnull)running_platform SWIFT_WARN_UNUSED_RESULT;
+ (void)setRunning_platform:(NSString * _Nonnull)value;
+ (void)setPlatformWithPlatform:(NSString * _Nullable)platform;
+ (void)initWithAppKey:(NSString * _Nonnull)appKey accessKey:(NSString * _Nonnull)accessKey completion:(void (^ _Nullable)(BOOL))completion SWIFT_METHOD_FAMILY(none);
/// This API allows you to show/hide the chat icon.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.showLiveChat(_ show:true)
///
/// \endcode\param show - Boolean value determines to show/hide the chat icon 
///
+ (void)showLiveChat:(BOOL)show SWIFT_UNAVAILABLE_MSG("'showLiveChat' has been renamed to 'showLauncher:'");
/// This API allows you to show/hide the chat icon.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.showLauncher(_ show:true)
///
/// \endcode\param show - Boolean value determines to show/hide the chat icon 
///
+ (void)showLauncher:(BOOL)show;
/// This API is used to enable the push notification for SalesIQ SDK.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.enablePush(regid: "DEVICE TOKEN", isTestDevice: BOOL)
///
/// \endcode\param regid - String value determines device token 
///
/// \param isTestDevice - Boolean value determines the SDK environment whether it is Sandbox(TRUE) or Production(FALSE) 
///
+ (void)enablePush:(NSString * _Nonnull)regid isTestDevice:(BOOL)isTestDevice mode:(enum APNSMode)mode;
/// This API is used to process the notifcation data for the SDK and display the notification message.
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.processNotificationWithInfo(info: notification.userInfo)
///
/// \endcode\param info - Notification info 
///
+ (void)processNotificationWithInfo:(NSDictionary * _Nullable)info;
+ (void)handleNotificationResponse:(NSDictionary * _Nullable)info;
/// This API is used to check whether the notifcation is related to Mobilisten or not .
/// <h2>Usage Example</h2>
/// \code
/// ZohoSalesIQ.isMobilistenNotification(notification.userInfo)
///
/// \endcode\param info - Notification info 
///
+ (BOOL)isMobilistenNotification:(NSDictionary * _Nullable)info SWIFT_WARN_UNUSED_RESULT;
/// This API is used to handle push notification custom action, call this if the action identifier is “Reply”
/// \code
/// ZohoSalesIQ. handleNotificationAction(notification.userInfo,response : "test")
///
/// \endcode\param info - Notification info, usern response string 
///
+ (void)handleNotificationAction:(NSDictionary * _Nullable)userInfo response:(NSString * _Nullable)response;
+ (void)setVisitorTrackingInterfaceHandler:(VisitorTrackingInterface * _Nullable)handler;
+ (void)setNotificationLinkHandler:(NotificationLinkHandler * _Nullable)handler;
+ (void)showInAppNotificationWithTitle:(NSString * _Nonnull)title subtitle:(NSString * _Nonnull)subtitle duration:(double)duration image:(UIImage * _Nullable)image action:(void (^ _Nonnull)(void))action;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UNUserNotificationCenter;
@class UNNotificationResponse;
@class UNNotification;

SWIFT_AVAILABILITY(ios,introduced=10.0)
@interface ZohoSalesIQ (SWIFT_EXTENSION(Mobilisten)) <UNUserNotificationCenterDelegate>
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler SWIFT_AVAILABILITY(ios,introduced=10.0);
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
@end




SWIFT_PROTOCOL("_TtP10Mobilisten23ZohoSalesIQChatDelegate_")
@protocol ZohoSalesIQChatDelegate
/// This method is called when a new chat is initiated by the visitor
- (void)chatOpenedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when an initiated chat is pickedup by an operator
- (void)chatAttendedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when a new chat is initiated by the visitor
- (void)chatMissedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when a chat is ended by a visitor or a operator
- (void)chatClosedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when a closed chat is reopened by a visitor
- (void)chatReopenedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when a rating is given for a chat by the visitor
- (void)chatRatingRecievedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when feedback for a given chat is submitted
- (void)chatFeedbackRecievedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when queue position for a queued chat changes
- (void)chatQueuePositionChangedWithChat:(SIQVisitorChat * _Nullable)chat;
/// This method is called when unread count changes
- (void)unreadCountChanged:(NSInteger)count;
@end


SWIFT_PROTOCOL("_TtP10Mobilisten19ZohoSalesIQDelegate_")
@protocol ZohoSalesIQDelegate
/// This method is called when support agents/bots are available and online to attend support chats
- (void)agentsOnline;
/// This method is called when support agents/bots are available to pickup support chats
- (void)agentsOffline;
/// This method is called when Mobilisten UI is opened
- (void)supportOpened;
/// This method is called when Mobilisten UI is closed
- (void)supportClosed;
/// This method is called on opening the support chat window
- (void)chatViewOpenedWithId:(NSString * _Nullable)id;
/// This method is called on closing the support chat window
- (void)chatViewClosedWithId:(NSString * _Nullable)id;
/// This method is called on opening the support home screen
- (void)homeViewOpened;
/// This method is called on closing the support home screen
- (void)homeViewClosed;
/// This method is called when the visitor is IP blocked by an operator or bot.
- (void)visitorIPBlocked;
/// This method is called when a customer trigger is to be executed
- (void)handleTriggerWithName:(NSString * _Nonnull)name visitorInformation:(SIQVisitor * _Nonnull)visitorInformation;
@end


SWIFT_PROTOCOL("_TtP10Mobilisten22ZohoSalesIQFAQDelegate_")
@protocol ZohoSalesIQFAQDelegate
/// This method is called when an article opened
- (void)articleOpenedWithId:(NSString * _Nullable)id;
/// This method is called when an article is closed
- (void)articleClosedWithId:(NSString * _Nullable)id;
/// This method is called when an article is liked
- (void)articleLikedWithId:(NSString * _Nullable)id;
/// This method is called when an article is disliked
- (void)articleDislikedWithId:(NSString * _Nullable)id;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
